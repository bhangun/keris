{
    "appsName": "myname",
    "baseName": "myname",
    "packageFolder": "myname",
    "info": {
        "description": "This is the official Ceph REST API",
        "version": "v1",
        "title": "Ceph REST API"
    },
    "endpoint": {
        "url": "https://cephmon1jtn.kpaasjtn1.telkom.co.id:8443/",
        "protocol": "https",
        "host": "cephmon1jtn.kpaasjtn1.telkom.co.id:8443",
        "basePath": "/",
        "servers": [
            {
                "url": "https://cephmon1jtn.kpaasjtn1.telkom.co.id:8443/"
            }
        ],
        "schemes": [
            "https"
        ]
    },
    "security": [
        {
            "name": "jwt",
            "protocol": "http",
            "typeName": "",
            "type": "bearer",
            "position": "",
            "bearerFormat": "JWT",
            "url": "",
            "tokenUrl": "",
            "in": "",
            "scopes": []
        }
    ],
    "services": [
        {
            "index": "0",
            "path": "/api/auth",
            "serviceName": "serv0Auth0",
            "method": "post",
            "summary": "",
            "desc": "Initiate a session with Ceph",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "Auth",
            "parameters": [],
            "tag": "Auth",
            "operationId": "serv0Auth0",
            "requestBody": {
                "required": [
                    "username",
                    "password"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "username",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "password",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R0A0B4osp201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R0A0B6x1o202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R0A0Byvvz400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R0A0Bsqsc401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R0A0Banej403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R0A0Bwfv8500",
                    "headers": []
                }
            ]
        },
        {
            "index": "1",
            "path": "/api/auth/check",
            "serviceName": "serv1Auth0",
            "method": "post",
            "summary": "Check token Authentication",
            "desc": "Initiate a session with Ceph",
            "responseType": "R1A0Bwv93201",
            "hasResponse": true,
            "parametersString": "String? token",
            "query": "?token=$token",
            "requestPayload": ", r1a0bwv93201",
            "requestPayloadStatement": "const r1a0bwv93201 = R1A0Bwv93201(token);",
            "onlyParam": "token",
            "jsonParam": ", json.encode({\"token\": \"${token}\"})",
            "name": "Auth",
            "parameters": [
                {
                    "name": "token",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Authentication Token",
                    "required": true
                }
            ],
            "tag": "Auth",
            "operationId": "serv1Auth0",
            "requestBody": {
                "required": [
                    "token"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "token",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "Authentication Token"
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "username",
                        "permissions",
                        "sso",
                        "pwdUpdateRequired"
                    ],
                    "name": "R1A0Bwv93201",
                    "properties": [
                        {
                            "name": "username",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Username"
                        },
                        {
                            "name": "permissions",
                            "type": "object",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "List of permissions acquired"
                        },
                        {
                            "name": "sso",
                            "type": "boolean",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Uses single sign on?"
                        },
                        {
                            "name": "pwdUpdateRequired",
                            "type": "boolean",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Is password update required?"
                        }
                    ],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R1A0Bmsma202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R1A0Bctc9400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R1A0Bd4li401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R1A0B30wj403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R1A0Bof9n500",
                    "headers": []
                }
            ]
        },
        {
            "index": "2",
            "path": "/api/auth/logout",
            "serviceName": "serv2Auth0",
            "method": "post",
            "summary": "",
            "desc": "Initiate a session with Ceph",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "Auth",
            "parameters": [],
            "tag": "Auth",
            "operationId": "serv2Auth0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R2A0Bw9j9201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R2A0Bkejm202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R2A0Bde5w400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R2A0Bhy4m401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R2A0Btrfl403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R2A0Bhjuw500",
                    "headers": []
                }
            ]
        },
        {
            "index": "3",
            "path": "/api/block/image",
            "serviceName": "serv3Rbd0",
            "method": "fetch",
            "summary": "Display Rbd Images",
            "desc": "RBD Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? pool_name, String? offset, String? limit, String? search, String? sort",
            "query": "?pool_name=$pool_name%26offset=$offset%26limit=$limit%26search=$search%26sort=$sort",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Rbd",
            "parameters": [
                {
                    "name": "pool_name",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Pool Name",
                    "allowEmptyValue": true
                },
                {
                    "name": "offset",
                    "in": "query",
                    "schema": {
                        "type": "integer"
                    },
                    "description": "offset",
                    "default": 0
                },
                {
                    "name": "limit",
                    "in": "query",
                    "schema": {
                        "type": "integer"
                    },
                    "description": "limit",
                    "default": 5
                },
                {
                    "name": "search",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "default": ""
                },
                {
                    "name": "sort",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "default": ""
                }
            ],
            "tag": "Rbd",
            "operationId": "serv3Rbd0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v2.0+json",
                    "component": "",
                    "required": [
                        "value",
                        "pool_name"
                    ],
                    "name": "R3A0B9tnc200",
                    "properties": [],
                    "object": {
                        "type": "object",
                        "name": "R3A0B9tnc200I",
                        "properties": [
                            {
                                "name": "value",
                                "type": "array",
                                "typeItems": "string",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "pool_name",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "pool name"
                            }
                        ]
                    },
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R3A0B0m6w400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R3A0Bwcto401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R3A0Bsarq403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R3A0Bv19u500",
                    "headers": []
                }
            ]
        },
        {
            "index": "3",
            "path": "/api/block/image",
            "serviceName": "serv3Rbd1",
            "method": "post",
            "summary": "",
            "desc": "RBD Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "Rbd",
            "parameters": [],
            "tag": "Rbd",
            "operationId": "serv3Rbd1",
            "requestBody": {
                "required": [
                    "name",
                    "pool_name",
                    "size"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "pool_name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "size",
                        "type": "integer",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "namespace",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "schedule_interval",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "obj_size",
                        "type": "integer",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "features",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "stripe_unit",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "stripe_count",
                        "type": "integer",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "data_pool",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "configuration",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "mirror_mode",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R3A1Bvpvh201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R3A1Bgx8b202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R3A1Bnlx4400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R3A1Bffua401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R3A1Btwce403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R3A1Bdld3500",
                    "headers": []
                }
            ]
        },
        {
            "index": "4",
            "path": "/api/block/image/clone_format_version",
            "serviceName": "serv4Rbd0",
            "method": "fetch",
            "summary": "",
            "desc": "RBD Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Rbd",
            "parameters": [],
            "tag": "Rbd",
            "operationId": "serv4Rbd0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R4A0Bgbn7200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R4A0Bzbqh400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R4A0Bi2qa401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R4A0Bjhvn403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R4A0B1plr500",
                    "headers": []
                }
            ]
        },
        {
            "index": "5",
            "path": "/api/block/image/default_features",
            "serviceName": "serv5Rbd0",
            "method": "fetch",
            "summary": "",
            "desc": "RBD Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Rbd",
            "parameters": [],
            "tag": "Rbd",
            "operationId": "serv5Rbd0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R5A0Bfwzq200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R5A0Bmz1r400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R5A0B4v2a401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R5A0Bqlrp403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R5A0Blato500",
                    "headers": []
                }
            ]
        },
        {
            "index": "6",
            "path": "/api/block/image/trash",
            "serviceName": "serv6RbdTrash0",
            "method": "fetch",
            "summary": "Get RBD Trash Details by pool name",
            "desc": "RBD Trash Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? pool_name",
            "query": "?pool_name=$pool_name",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "RbdTrash",
            "parameters": [
                {
                    "name": "pool_name",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Name of the pool",
                    "allowEmptyValue": true
                }
            ],
            "tag": "RbdTrash",
            "operationId": "serv6RbdTrash0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "status",
                        "value",
                        "pool_name"
                    ],
                    "name": "R6A0Byoyq200",
                    "properties": [],
                    "object": {
                        "type": "object",
                        "name": "R6A0Byoyq200I",
                        "properties": [
                            {
                                "name": "status",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "value",
                                "type": "array",
                                "typeItems": "string",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "pool_name",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "pool name"
                            }
                        ]
                    },
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R6A0Bn4mo400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R6A0Bo13y401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R6A0Bi2sb403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R6A0Bkbc8500",
                    "headers": []
                }
            ]
        },
        {
            "index": "7",
            "path": "/api/block/image/trash/purge",
            "serviceName": "serv7RbdTrash0",
            "method": "post",
            "summary": "",
            "desc": "RBD Trash Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? pool_name",
            "query": "?pool_name=$pool_name",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "pool_name",
            "jsonParam": ", json.encode({\"pool_name\": \"${pool_name}\"})",
            "name": "RbdTrash",
            "parameters": [
                {
                    "name": "pool_name",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "allowEmptyValue": true
                }
            ],
            "tag": "RbdTrash",
            "operationId": "serv7RbdTrash0",
            "requestBody": {
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "pool_name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R7A0Bch51201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R7A0Bix7l202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R7A0Bb34o400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R7A0Byfxc401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R7A0B3eyj403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R7A0Bg7i9500",
                    "headers": []
                }
            ]
        },
        {
            "index": "8",
            "path": "/api/block/image/trash/${image_id_spec}",
            "serviceName": "serv8RbdTrash0",
            "method": "delete",
            "summary": "",
            "desc": "RBD Trash Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? image_id_spec, String? force",
            "query": "?force=$force",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "RbdTrash",
            "parameters": [
                {
                    "name": "image_id_spec",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "force",
                    "in": "query",
                    "schema": {
                        "type": "boolean"
                    },
                    "default": false
                }
            ],
            "tag": "RbdTrash",
            "operationId": "serv8RbdTrash0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R8A0Bsh3o202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "204",
                    "description": "Resource deleted.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R8A0Bkk27204",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R8A0B3tfr400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R8A0Bfkr5401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R8A0Bq7sg403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R8A0Bz595500",
                    "headers": []
                }
            ]
        },
        {
            "index": "9",
            "path": "/api/block/image/trash/${image_id_spec}/restore",
            "serviceName": "serv9RbdTrash0",
            "method": "post",
            "summary": "",
            "desc": "RBD Trash Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? image_id_spec",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "image_id_spec",
            "jsonParam": ", json.encode({\"image_id_spec\": \"${image_id_spec}\"})",
            "name": "RbdTrash",
            "parameters": [
                {
                    "name": "image_id_spec",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "RbdTrash",
            "operationId": "serv9RbdTrash0",
            "requestBody": {
                "required": [
                    "new_image_name"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "new_image_name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R9A0Btlx8201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R9A0Bmh59202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R9A0Bssg5400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R9A0B8ioo401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R9A0Buzrj403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R9A0B8gc7500",
                    "headers": []
                }
            ]
        },
        {
            "index": "10",
            "path": "/api/block/image/${image_spec}",
            "serviceName": "serv10Rbd0",
            "method": "fetch",
            "summary": "",
            "desc": "RBD Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? image_spec",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Rbd",
            "parameters": [
                {
                    "name": "image_spec",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Rbd",
            "operationId": "serv10Rbd0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R10A0Bsu6k200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R10A0Bl07e400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R10A0Bf04h401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R10A0Bavni403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R10A0Bip1d500",
                    "headers": []
                }
            ]
        },
        {
            "index": "10",
            "path": "/api/block/image/${image_spec}",
            "serviceName": "serv10Rbd1",
            "method": "update",
            "summary": "",
            "desc": "RBD Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? image_spec",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "image_spec",
            "jsonParam": ", json.encode({\"image_spec\": \"${image_spec}\"})",
            "name": "Rbd",
            "parameters": [
                {
                    "name": "image_spec",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Rbd",
            "operationId": "serv10Rbd1",
            "requestBody": {
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "size",
                        "type": "integer",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "features",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "configuration",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "enable_mirror",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "primary",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "resync",
                        "type": "boolean",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "mirror_mode",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "schedule_interval",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "remove_scheduling",
                        "type": "boolean",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R10A1Bqbtt200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R10A1B89tg202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R10A1Bshte400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R10A1Bibgs401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R10A1Boyem403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R10A1Bjism500",
                    "headers": []
                }
            ]
        },
        {
            "index": "10",
            "path": "/api/block/image/${image_spec}",
            "serviceName": "serv10Rbd2",
            "method": "delete",
            "summary": "",
            "desc": "RBD Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? image_spec",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Rbd",
            "parameters": [
                {
                    "name": "image_spec",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Rbd",
            "operationId": "serv10Rbd2",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R10A2Bh139202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "204",
                    "description": "Resource deleted.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R10A2Bugs9204",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R10A2Bz3zw400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R10A2B4e3r401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R10A2Buiss403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R10A2Baed7500",
                    "headers": []
                }
            ]
        },
        {
            "index": "11",
            "path": "/api/block/image/${image_spec}/copy",
            "serviceName": "serv11Rbd0",
            "method": "post",
            "summary": "",
            "desc": "RBD Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? image_spec",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "image_spec",
            "jsonParam": ", json.encode({\"image_spec\": \"${image_spec}\"})",
            "name": "Rbd",
            "parameters": [
                {
                    "name": "image_spec",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Rbd",
            "operationId": "serv11Rbd0",
            "requestBody": {
                "required": [
                    "dest_pool_name",
                    "dest_namespace",
                    "dest_image_name"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "dest_pool_name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "dest_namespace",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "dest_image_name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "snapshot_name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "obj_size",
                        "type": "integer",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "features",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "stripe_unit",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "stripe_count",
                        "type": "integer",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "data_pool",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "configuration",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R11A0Bhnxk201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R11A0Blemq202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R11A0Bgzrq400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R11A0B6v72401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R11A0Bnqbb403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R11A0B8xut500",
                    "headers": []
                }
            ]
        },
        {
            "index": "12",
            "path": "/api/block/image/${image_spec}/flatten",
            "serviceName": "serv12Rbd0",
            "method": "post",
            "summary": "",
            "desc": "RBD Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? image_spec",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "image_spec",
            "jsonParam": ", json.encode({\"image_spec\": \"${image_spec}\"})",
            "name": "Rbd",
            "parameters": [
                {
                    "name": "image_spec",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Rbd",
            "operationId": "serv12Rbd0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R12A0Bdu0x201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R12A0Bnlfj202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R12A0Bbrdw400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R12A0Belbb401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R12A0Bet1i403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R12A0Bzfbt500",
                    "headers": []
                }
            ]
        },
        {
            "index": "13",
            "path": "/api/block/image/${image_spec}/move_trash",
            "serviceName": "serv13Rbd0",
            "method": "post",
            "summary": "",
            "desc": "RBD Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? image_spec",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "image_spec",
            "jsonParam": ", json.encode({\"image_spec\": \"${image_spec}\"})",
            "name": "Rbd",
            "parameters": [
                {
                    "name": "image_spec",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Rbd",
            "operationId": "serv13Rbd0",
            "requestBody": {
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "delay",
                        "type": "integer",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R13A0Bl87j201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R13A0Bn5b3202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R13A0Be5ia400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R13A0Bv4sr401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R13A0Bibns403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R13A0B1jxe500",
                    "headers": []
                }
            ]
        },
        {
            "index": "14",
            "path": "/api/block/image/${image_spec}/snap",
            "serviceName": "serv14RbdSnapshot0",
            "method": "post",
            "summary": "",
            "desc": "RBD Snapshot Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? image_spec",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "image_spec",
            "jsonParam": ", json.encode({\"image_spec\": \"${image_spec}\"})",
            "name": "RbdSnapshot",
            "parameters": [
                {
                    "name": "image_spec",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "RbdSnapshot",
            "operationId": "serv14RbdSnapshot0",
            "requestBody": {
                "required": [
                    "snapshot_name"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "snapshot_name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R14A0Blsyu201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R14A0B3txg202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R14A0Bphih400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R14A0Bixg5401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R14A0B7f99403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R14A0Bnfqo500",
                    "headers": []
                }
            ]
        },
        {
            "index": "15",
            "path": "/api/block/image/${image_spec}/snap/${snapshot_name}",
            "serviceName": "serv15RbdSnapshot0",
            "method": "update",
            "summary": "",
            "desc": "RBD Snapshot Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? image_spec, String? snapshot_name",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "image_spec, snapshot_name",
            "jsonParam": ", json.encode({\"image_spec\": \"${image_spec}\", \"snapshot_name\": \"${snapshot_name}\"})",
            "name": "RbdSnapshot",
            "parameters": [
                {
                    "name": "image_spec",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "snapshot_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "RbdSnapshot",
            "operationId": "serv15RbdSnapshot0",
            "requestBody": {
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "new_snap_name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "is_protected",
                        "type": "boolean",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R15A0B7h3d200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R15A0B50tm202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R15A0Bu77u400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R15A0B51hi401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R15A0B55vf403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R15A0Bqvlq500",
                    "headers": []
                }
            ]
        },
        {
            "index": "15",
            "path": "/api/block/image/${image_spec}/snap/${snapshot_name}",
            "serviceName": "serv15RbdSnapshot1",
            "method": "delete",
            "summary": "",
            "desc": "RBD Snapshot Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? image_spec, String? snapshot_name",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "RbdSnapshot",
            "parameters": [
                {
                    "name": "image_spec",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "snapshot_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "RbdSnapshot",
            "operationId": "serv15RbdSnapshot1",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R15A1B1euj202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "204",
                    "description": "Resource deleted.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R15A1Bzdta204",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R15A1B6fmh400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R15A1B3ofq401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R15A1Brh9p403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R15A1Br41c500",
                    "headers": []
                }
            ]
        },
        {
            "index": "16",
            "path": "/api/block/image/${image_spec}/snap/${snapshot_name}/clone",
            "serviceName": "serv16RbdSnapshot0",
            "method": "post",
            "summary": "",
            "desc": "RBD Snapshot Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? image_spec, String? snapshot_name",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "image_spec, snapshot_name",
            "jsonParam": ", json.encode({\"image_spec\": \"${image_spec}\", \"snapshot_name\": \"${snapshot_name}\"})",
            "name": "RbdSnapshot",
            "parameters": [
                {
                    "name": "image_spec",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "snapshot_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "RbdSnapshot",
            "operationId": "serv16RbdSnapshot0",
            "requestBody": {
                "required": [
                    "child_pool_name",
                    "child_image_name"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "child_pool_name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "child_image_name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "child_namespace",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "obj_size",
                        "type": "integer",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "features",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "stripe_unit",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "stripe_count",
                        "type": "integer",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "data_pool",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "configuration",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R16A0B79gx201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R16A0Bi4wf202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R16A0Bkkbn400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R16A0Bb6pl401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R16A0Bzpj8403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R16A0Bc8bo500",
                    "headers": []
                }
            ]
        },
        {
            "index": "17",
            "path": "/api/block/image/${image_spec}/snap/${snapshot_name}/rollback",
            "serviceName": "serv17RbdSnapshot0",
            "method": "post",
            "summary": "",
            "desc": "RBD Snapshot Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? image_spec, String? snapshot_name",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "image_spec, snapshot_name",
            "jsonParam": ", json.encode({\"image_spec\": \"${image_spec}\", \"snapshot_name\": \"${snapshot_name}\"})",
            "name": "RbdSnapshot",
            "parameters": [
                {
                    "name": "image_spec",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "snapshot_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "RbdSnapshot",
            "operationId": "serv17RbdSnapshot0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R17A0B02vn201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R17A0Bx5u5202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R17A0Brwml400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R17A0Bv30r401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R17A0B0cud403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R17A0Bu44o500",
                    "headers": []
                }
            ]
        },
        {
            "index": "18",
            "path": "/api/block/mirroring/pool/${pool_name}",
            "serviceName": "serv18RbdMirroringPoolMode0",
            "method": "fetch",
            "summary": "Display Rbd Mirroring Summary",
            "desc": "RBD Mirroring Pool Mode Management API",
            "responseType": "R18A0Ber9o200",
            "hasResponse": true,
            "parametersString": "String? pool_name",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "RbdMirroringPoolMode",
            "parameters": [
                {
                    "name": "pool_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Pool Name",
                    "required": true
                }
            ],
            "tag": "RbdMirroringPoolMode",
            "operationId": "serv18RbdMirroringPoolMode0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "mirror_mode"
                    ],
                    "name": "R18A0Ber9o200",
                    "properties": [
                        {
                            "name": "mirror_mode",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Mirror Mode"
                        }
                    ],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R18A0Bnoti400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R18A0Bieda401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R18A0Beu2u403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R18A0Bnkv1500",
                    "headers": []
                }
            ]
        },
        {
            "index": "18",
            "path": "/api/block/mirroring/pool/${pool_name}",
            "serviceName": "serv18RbdMirroringPoolMode1",
            "method": "update",
            "summary": "",
            "desc": "RBD Mirroring Pool Mode Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? pool_name",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "pool_name",
            "jsonParam": ", json.encode({\"pool_name\": \"${pool_name}\"})",
            "name": "RbdMirroringPoolMode",
            "parameters": [
                {
                    "name": "pool_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "RbdMirroringPoolMode",
            "operationId": "serv18RbdMirroringPoolMode1",
            "requestBody": {
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "mirror_mode",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R18A1Bcg3c200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R18A1Bvfyv202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R18A1Bxhai400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R18A1Bd2tl401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R18A1Bpi8r403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R18A1B2t4f500",
                    "headers": []
                }
            ]
        },
        {
            "index": "19",
            "path": "/api/block/mirroring/pool/${pool_name}/bootstrap/peer",
            "serviceName": "serv19RbdMirroringPoolBootstrap0",
            "method": "post",
            "summary": "",
            "desc": "RBD Mirroring Pool Bootstrap Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? pool_name",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "pool_name",
            "jsonParam": ", json.encode({\"pool_name\": \"${pool_name}\"})",
            "name": "RbdMirroringPoolBootstrap",
            "parameters": [
                {
                    "name": "pool_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "RbdMirroringPoolBootstrap",
            "operationId": "serv19RbdMirroringPoolBootstrap0",
            "requestBody": {
                "required": [
                    "direction",
                    "token"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "direction",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "token",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R19A0Bwnmq201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R19A0B8r94202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R19A0Bnmmq400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R19A0B01f1401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R19A0B4yki403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R19A0Bq46v500",
                    "headers": []
                }
            ]
        },
        {
            "index": "20",
            "path": "/api/block/mirroring/pool/${pool_name}/bootstrap/token",
            "serviceName": "serv20RbdMirroringPoolBootstrap0",
            "method": "post",
            "summary": "",
            "desc": "RBD Mirroring Pool Bootstrap Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? pool_name",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "pool_name",
            "jsonParam": ", json.encode({\"pool_name\": \"${pool_name}\"})",
            "name": "RbdMirroringPoolBootstrap",
            "parameters": [
                {
                    "name": "pool_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "RbdMirroringPoolBootstrap",
            "operationId": "serv20RbdMirroringPoolBootstrap0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R20A0Bm46u201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R20A0Bxlvl202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R20A0B0y6i400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R20A0Bsias401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R20A0By8s4403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R20A0Bywz9500",
                    "headers": []
                }
            ]
        },
        {
            "index": "21",
            "path": "/api/block/mirroring/pool/${pool_name}/peer",
            "serviceName": "serv21RbdMirroringPoolPeer0",
            "method": "fetch",
            "summary": "",
            "desc": "RBD Mirroring Pool Peer Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? pool_name",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "RbdMirroringPoolPeer",
            "parameters": [
                {
                    "name": "pool_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "RbdMirroringPoolPeer",
            "operationId": "serv21RbdMirroringPoolPeer0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R21A0Bi8sg200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R21A0Bwlua400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R21A0Bzmwh401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R21A0B19ms403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R21A0Bhpnq500",
                    "headers": []
                }
            ]
        },
        {
            "index": "21",
            "path": "/api/block/mirroring/pool/${pool_name}/peer",
            "serviceName": "serv21RbdMirroringPoolPeer1",
            "method": "post",
            "summary": "",
            "desc": "RBD Mirroring Pool Peer Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? pool_name",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "pool_name",
            "jsonParam": ", json.encode({\"pool_name\": \"${pool_name}\"})",
            "name": "RbdMirroringPoolPeer",
            "parameters": [
                {
                    "name": "pool_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "RbdMirroringPoolPeer",
            "operationId": "serv21RbdMirroringPoolPeer1",
            "requestBody": {
                "required": [
                    "cluster_name",
                    "client_id"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "cluster_name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "client_id",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "mon_host",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "key",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R21A1Bpj7b201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R21A1Bgx7h202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R21A1Bdfiy400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R21A1Bm6f3401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R21A1Bk1bk403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R21A1Batfh500",
                    "headers": []
                }
            ]
        },
        {
            "index": "22",
            "path": "/api/block/mirroring/pool/${pool_name}/peer/${peer_uuid}",
            "serviceName": "serv22RbdMirroringPoolPeer0",
            "method": "fetch",
            "summary": "",
            "desc": "RBD Mirroring Pool Peer Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? pool_name, String? peer_uuid",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "RbdMirroringPoolPeer",
            "parameters": [
                {
                    "name": "pool_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "peer_uuid",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "RbdMirroringPoolPeer",
            "operationId": "serv22RbdMirroringPoolPeer0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R22A0Baawy200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R22A0Bojqu400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R22A0B1033401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R22A0Bk6j5403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R22A0Bfadf500",
                    "headers": []
                }
            ]
        },
        {
            "index": "22",
            "path": "/api/block/mirroring/pool/${pool_name}/peer/${peer_uuid}",
            "serviceName": "serv22RbdMirroringPoolPeer1",
            "method": "update",
            "summary": "",
            "desc": "RBD Mirroring Pool Peer Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? pool_name, String? peer_uuid",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "pool_name, peer_uuid",
            "jsonParam": ", json.encode({\"pool_name\": \"${pool_name}\", \"peer_uuid\": \"${peer_uuid}\"})",
            "name": "RbdMirroringPoolPeer",
            "parameters": [
                {
                    "name": "pool_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "peer_uuid",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "RbdMirroringPoolPeer",
            "operationId": "serv22RbdMirroringPoolPeer1",
            "requestBody": {
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "cluster_name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "client_id",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "mon_host",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "key",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R22A1Bctxp200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R22A1Bwgna202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R22A1B52xi400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R22A1Bqhjj401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R22A1Bsph9403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R22A1Bu67b500",
                    "headers": []
                }
            ]
        },
        {
            "index": "22",
            "path": "/api/block/mirroring/pool/${pool_name}/peer/${peer_uuid}",
            "serviceName": "serv22RbdMirroringPoolPeer2",
            "method": "delete",
            "summary": "",
            "desc": "RBD Mirroring Pool Peer Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? pool_name, String? peer_uuid",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "RbdMirroringPoolPeer",
            "parameters": [
                {
                    "name": "pool_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "peer_uuid",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "RbdMirroringPoolPeer",
            "operationId": "serv22RbdMirroringPoolPeer2",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R22A2Bry0u202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "204",
                    "description": "Resource deleted.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R22A2Bgm0b204",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R22A2B6cii400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R22A2Bv2t8401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R22A2B2umu403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R22A2Bo7em500",
                    "headers": []
                }
            ]
        },
        {
            "index": "23",
            "path": "/api/block/mirroring/site_name",
            "serviceName": "serv23RbdMirroring0",
            "method": "fetch",
            "summary": "Display Rbd Mirroring sitename",
            "desc": "RBD Mirroring Management API",
            "responseType": "R23A0Bzaow200",
            "hasResponse": true,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "RbdMirroring",
            "parameters": [],
            "tag": "RbdMirroring",
            "operationId": "serv23RbdMirroring0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "site_name"
                    ],
                    "name": "R23A0Bzaow200",
                    "properties": [
                        {
                            "name": "site_name",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Site Name"
                        }
                    ],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R23A0B5yet400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R23A0Bc008401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R23A0B9908403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R23A0Byx08500",
                    "headers": []
                }
            ]
        },
        {
            "index": "23",
            "path": "/api/block/mirroring/site_name",
            "serviceName": "serv23RbdMirroring1",
            "method": "update",
            "summary": "",
            "desc": "RBD Mirroring Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "RbdMirroring",
            "parameters": [],
            "tag": "RbdMirroring",
            "operationId": "serv23RbdMirroring1",
            "requestBody": {
                "required": [
                    "site_name"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "site_name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R23A1Blsmn200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R23A1Bkte9202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R23A1Bm8dm400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R23A1Bqmgy401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R23A1Babps403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R23A1B0nn2500",
                    "headers": []
                }
            ]
        },
        {
            "index": "24",
            "path": "/api/block/mirroring/summary",
            "serviceName": "serv24RbdMirroringSummary0",
            "method": "fetch",
            "summary": "Display Rbd Mirroring Summary",
            "desc": "RBD Mirroring Summary Management API",
            "responseType": "R24A0Bj2c8200",
            "hasResponse": true,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "RbdMirroringSummary",
            "parameters": [],
            "tag": "RbdMirroringSummary",
            "operationId": "serv24RbdMirroringSummary0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "site_name",
                        "status",
                        "content_data"
                    ],
                    "name": "R24A0Bj2c8200",
                    "properties": [
                        {
                            "name": "site_name",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "site name"
                        },
                        {
                            "name": "status",
                            "type": "integer",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "content_data",
                            "type": "object",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        }
                    ],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R24A0Bjxlu400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R24A0Bcqgm401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R24A0Bwsok403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R24A0Bf0cc500",
                    "headers": []
                }
            ]
        },
        {
            "index": "25",
            "path": "/api/block/pool/${pool_name}/namespace",
            "serviceName": "serv25RbdNamespace0",
            "method": "fetch",
            "summary": "",
            "desc": "RBD Namespace Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? pool_name",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "RbdNamespace",
            "parameters": [
                {
                    "name": "pool_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "RbdNamespace",
            "operationId": "serv25RbdNamespace0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R25A0Bdeg8200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R25A0Bqrtm400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R25A0Bjlcb401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R25A0Bfsk9403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R25A0Bwicl500",
                    "headers": []
                }
            ]
        },
        {
            "index": "25",
            "path": "/api/block/pool/${pool_name}/namespace",
            "serviceName": "serv25RbdNamespace1",
            "method": "post",
            "summary": "",
            "desc": "RBD Namespace Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? pool_name",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "pool_name",
            "jsonParam": ", json.encode({\"pool_name\": \"${pool_name}\"})",
            "name": "RbdNamespace",
            "parameters": [
                {
                    "name": "pool_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "RbdNamespace",
            "operationId": "serv25RbdNamespace1",
            "requestBody": {
                "required": [
                    "namespace"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "namespace",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R25A1Bn8br201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R25A1B2mkk202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R25A1Biafk400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R25A1B31pb401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R25A1B5icu403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R25A1Bm4cg500",
                    "headers": []
                }
            ]
        },
        {
            "index": "26",
            "path": "/api/block/pool/${pool_name}/namespace/${namespace}",
            "serviceName": "serv26RbdNamespace0",
            "method": "delete",
            "summary": "",
            "desc": "RBD Namespace Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? pool_name, String? namespace",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "RbdNamespace",
            "parameters": [
                {
                    "name": "pool_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "namespace",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "RbdNamespace",
            "operationId": "serv26RbdNamespace0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R26A0Brnuq202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "204",
                    "description": "Resource deleted.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R26A0Bz2yj204",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R26A0Bm6ft400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R26A0Behm9401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R26A0Bfbcj403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R26A0Bc1gp500",
                    "headers": []
                }
            ]
        },
        {
            "index": "27",
            "path": "/api/cephfs",
            "serviceName": "serv27Cephfs0",
            "method": "fetch",
            "summary": "",
            "desc": "Cephfs Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Cephfs",
            "parameters": [],
            "tag": "Cephfs",
            "operationId": "serv27Cephfs0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R27A0Bhz8q200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R27A0Bswae400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R27A0B391c401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R27A0Bn7nm403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R27A0B65ya500",
                    "headers": []
                }
            ]
        },
        {
            "index": "28",
            "path": "/api/cephfs/${fs_id}",
            "serviceName": "serv28Cephfs0",
            "method": "fetch",
            "summary": "",
            "desc": "Cephfs Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? fs_id",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Cephfs",
            "parameters": [
                {
                    "name": "fs_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Cephfs",
            "operationId": "serv28Cephfs0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R28A0Bav3a200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R28A0Buxea400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R28A0Bhdpx401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R28A0Bmyy3403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R28A0Bly0s500",
                    "headers": []
                }
            ]
        },
        {
            "index": "29",
            "path": "/api/cephfs/${fs_id}/client/${client_id}",
            "serviceName": "serv29Cephfs0",
            "method": "delete",
            "summary": "",
            "desc": "Cephfs Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? fs_id, String? client_id",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Cephfs",
            "parameters": [
                {
                    "name": "fs_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "client_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Cephfs",
            "operationId": "serv29Cephfs0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R29A0B0no5202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "204",
                    "description": "Resource deleted.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R29A0Bt2xj204",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R29A0Bse8p400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R29A0Bf3hs401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R29A0Bnklm403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R29A0Bekqe500",
                    "headers": []
                }
            ]
        },
        {
            "index": "30",
            "path": "/api/cephfs/${fs_id}/clients",
            "serviceName": "serv30Cephfs0",
            "method": "fetch",
            "summary": "",
            "desc": "Cephfs Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? fs_id",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Cephfs",
            "parameters": [
                {
                    "name": "fs_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Cephfs",
            "operationId": "serv30Cephfs0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R30A0B4u98200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R30A0Bfygk400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R30A0B9axt401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R30A0B8odp403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R30A0Bcrj2500",
                    "headers": []
                }
            ]
        },
        {
            "index": "31",
            "path": "/api/cephfs/${fs_id}/get_root_directory",
            "serviceName": "serv31Cephfs0",
            "method": "fetch",
            "summary": "",
            "desc": "Cephfs Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? fs_id",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Cephfs",
            "parameters": [
                {
                    "name": "fs_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Cephfs",
            "operationId": "serv31Cephfs0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R31A0B7g2q200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R31A0B7et1400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R31A0B07fv401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R31A0B8cze403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R31A0B37qk500",
                    "headers": []
                }
            ]
        },
        {
            "index": "32",
            "path": "/api/cephfs/${fs_id}/ls_dir",
            "serviceName": "serv32Cephfs0",
            "method": "fetch",
            "summary": "",
            "desc": "Cephfs Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? fs_id, String? path, String? depth",
            "query": "?path=$path%26depth=$depth",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Cephfs",
            "parameters": [
                {
                    "name": "fs_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "path",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "allowEmptyValue": true
                },
                {
                    "name": "depth",
                    "in": "query",
                    "schema": {
                        "type": "integer"
                    },
                    "default": 1
                }
            ],
            "tag": "Cephfs",
            "operationId": "serv32Cephfs0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R32A0Bt8vh200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R32A0Bxo2j400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R32A0Bisyf401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R32A0B233c403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R32A0Bavr6500",
                    "headers": []
                }
            ]
        },
        {
            "index": "33",
            "path": "/api/cephfs/${fs_id}/mds_counters",
            "serviceName": "serv33Cephfs0",
            "method": "fetch",
            "summary": "",
            "desc": "Cephfs Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? fs_id, String? counters",
            "query": "?counters=$counters",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Cephfs",
            "parameters": [
                {
                    "name": "fs_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "counters",
                    "in": "query",
                    "schema": {
                        "type": "integer"
                    },
                    "allowEmptyValue": true
                }
            ],
            "tag": "Cephfs",
            "operationId": "serv33Cephfs0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R33A0Btp4a200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R33A0B0rfg400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R33A0B9ns3401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R33A0Bio7o403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R33A0Bdjhe500",
                    "headers": []
                }
            ]
        },
        {
            "index": "34",
            "path": "/api/cephfs/${fs_id}/quota",
            "serviceName": "serv34Cephfs0",
            "method": "fetch",
            "summary": "Get Cephfs Quotas of the specified path",
            "desc": "Cephfs Management API",
            "responseType": "R34A0B19fc200",
            "hasResponse": true,
            "parametersString": "String? fs_id, String? path",
            "query": "?path=$path",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Cephfs",
            "parameters": [
                {
                    "name": "fs_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "description": "File System Identifier",
                    "required": true
                },
                {
                    "name": "path",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "description": "File System Path",
                    "required": true
                }
            ],
            "tag": "Cephfs",
            "operationId": "serv34Cephfs0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "max_bytes",
                        "max_files"
                    ],
                    "name": "R34A0B19fc200",
                    "properties": [
                        {
                            "name": "max_bytes",
                            "type": "integer",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "max_files",
                            "type": "integer",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        }
                    ],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R34A0Bxzhh400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R34A0Bl7lv401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R34A0Bqcvm403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R34A0Bbbh7500",
                    "headers": []
                }
            ]
        },
        {
            "index": "34",
            "path": "/api/cephfs/${fs_id}/quota",
            "serviceName": "serv34Cephfs1",
            "method": "update",
            "summary": "",
            "desc": "Cephfs Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? fs_id",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "fs_id",
            "jsonParam": ", json.encode({\"fs_id\": \"${fs_id}\"})",
            "name": "Cephfs",
            "parameters": [
                {
                    "name": "fs_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Cephfs",
            "operationId": "serv34Cephfs1",
            "requestBody": {
                "required": [
                    "path"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "path",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "max_bytes",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "max_files",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R34A1B9kje200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R34A1B957y202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R34A1By9bw400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R34A1Bmsbg401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R34A1Bhc36403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R34A1Botkr500",
                    "headers": []
                }
            ]
        },
        {
            "index": "35",
            "path": "/api/cephfs/${fs_id}/snapshot",
            "serviceName": "serv35Cephfs0",
            "method": "post",
            "summary": "",
            "desc": "Cephfs Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? fs_id",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "fs_id",
            "jsonParam": ", json.encode({\"fs_id\": \"${fs_id}\"})",
            "name": "Cephfs",
            "parameters": [
                {
                    "name": "fs_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Cephfs",
            "operationId": "serv35Cephfs0",
            "requestBody": {
                "required": [
                    "path"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "path",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R35A0Brl0j201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R35A0Bi8mn202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R35A0Bf8of400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R35A0Bmg0o401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R35A0Bf4xh403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R35A0B3yqs500",
                    "headers": []
                }
            ]
        },
        {
            "index": "35",
            "path": "/api/cephfs/${fs_id}/snapshot",
            "serviceName": "serv35Cephfs1",
            "method": "delete",
            "summary": "",
            "desc": "Cephfs Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? fs_id, String? path, String? name",
            "query": "?path=$path%26name=$name",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Cephfs",
            "parameters": [
                {
                    "name": "fs_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "path",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "name",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Cephfs",
            "operationId": "serv35Cephfs1",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R35A1Bi4iw202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "204",
                    "description": "Resource deleted.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R35A1B5gmn204",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R35A1Bl2jj400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R35A1Bhsyb401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R35A1Bkh6j403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R35A1Bdfvh500",
                    "headers": []
                }
            ]
        },
        {
            "index": "36",
            "path": "/api/cephfs/${fs_id}/tree",
            "serviceName": "serv36Cephfs0",
            "method": "post",
            "summary": "",
            "desc": "Cephfs Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? fs_id",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "fs_id",
            "jsonParam": ", json.encode({\"fs_id\": \"${fs_id}\"})",
            "name": "Cephfs",
            "parameters": [
                {
                    "name": "fs_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Cephfs",
            "operationId": "serv36Cephfs0",
            "requestBody": {
                "required": [
                    "path"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "path",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R36A0Be74e201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R36A0Bppdf202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R36A0B84ra400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R36A0Buf09401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R36A0B1mej403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R36A0B5lpl500",
                    "headers": []
                }
            ]
        },
        {
            "index": "36",
            "path": "/api/cephfs/${fs_id}/tree",
            "serviceName": "serv36Cephfs1",
            "method": "delete",
            "summary": "",
            "desc": "Cephfs Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? fs_id, String? path",
            "query": "?path=$path",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Cephfs",
            "parameters": [
                {
                    "name": "fs_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "path",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Cephfs",
            "operationId": "serv36Cephfs1",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R36A1Bplat202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "204",
                    "description": "Resource deleted.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R36A1Bgcp6204",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R36A1Blyom400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R36A1Bcn9k401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R36A1Bw7m2403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R36A1Bm0x1500",
                    "headers": []
                }
            ]
        },
        {
            "index": "37",
            "path": "/api/cluster",
            "serviceName": "serv37Cluster0",
            "method": "fetch",
            "summary": "Get the cluster status",
            "desc": "Get Cluster Details",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Cluster",
            "parameters": [],
            "tag": "Cluster",
            "operationId": "serv37Cluster0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v0.1+json",
                    "component": "",
                    "required": [],
                    "name": "R37A0B7q8w200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R37A0Brgpf400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R37A0Bp024401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R37A0B8tke403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R37A0B9squ500",
                    "headers": []
                }
            ]
        },
        {
            "index": "37",
            "path": "/api/cluster",
            "serviceName": "serv37Cluster1",
            "method": "update",
            "summary": "Update the cluster status",
            "desc": "Get Cluster Details",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "Cluster",
            "parameters": [],
            "tag": "Cluster",
            "operationId": "serv37Cluster1",
            "requestBody": {
                "required": [
                    "status"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "status",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "Cluster Status"
                    }
                ]
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v0.1+json",
                    "component": "",
                    "required": [],
                    "name": "R37A1Bni9q200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v0.1+json",
                    "component": "",
                    "required": [],
                    "name": "R37A1Beh5b202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R37A1Bdpiw400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R37A1Bbbcn401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R37A1Bvtas403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R37A1Bjcim500",
                    "headers": []
                }
            ]
        },
        {
            "index": "38",
            "path": "/api/cluster_conf",
            "serviceName": "serv38ClusterConfiguration0",
            "method": "fetch",
            "summary": "",
            "desc": "Manage Cluster Configurations",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "ClusterConfiguration",
            "parameters": [],
            "tag": "ClusterConfiguration",
            "operationId": "serv38ClusterConfiguration0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R38A0Bd26n200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R38A0Bo40f400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R38A0Bhifr401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R38A0Bndwr403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R38A0B1rlx500",
                    "headers": []
                }
            ]
        },
        {
            "index": "38",
            "path": "/api/cluster_conf",
            "serviceName": "serv38ClusterConfiguration1",
            "method": "post",
            "summary": "",
            "desc": "Manage Cluster Configurations",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "ClusterConfiguration",
            "parameters": [],
            "tag": "ClusterConfiguration",
            "operationId": "serv38ClusterConfiguration1",
            "requestBody": {
                "required": [
                    "name",
                    "value"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "value",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R38A1Bz6tu201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R38A1Byxna202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R38A1Barx3400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R38A1B9sr7401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R38A1Boreo403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R38A1Ba39y500",
                    "headers": []
                }
            ]
        },
        {
            "index": "38",
            "path": "/api/cluster_conf",
            "serviceName": "serv38ClusterConfiguration2",
            "method": "update",
            "summary": "",
            "desc": "Manage Cluster Configurations",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "ClusterConfiguration",
            "parameters": [],
            "tag": "ClusterConfiguration",
            "operationId": "serv38ClusterConfiguration2",
            "requestBody": {
                "required": [
                    "options"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "options",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R38A2B2ku1200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R38A2Bszti202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R38A2Bxcl5400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R38A2Bu6cm401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R38A2B1vjx403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R38A2Bwnd8500",
                    "headers": []
                }
            ]
        },
        {
            "index": "39",
            "path": "/api/cluster_conf/filter",
            "serviceName": "serv39ClusterConfiguration0",
            "method": "fetch",
            "summary": "Get Cluster Configuration by name",
            "desc": "Manage Cluster Configurations",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? names",
            "query": "?names=$names",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "ClusterConfiguration",
            "parameters": [
                {
                    "name": "names",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Config option names",
                    "allowEmptyValue": true
                }
            ],
            "tag": "ClusterConfiguration",
            "operationId": "serv39ClusterConfiguration0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "name",
                        "type",
                        "level",
                        "desc",
                        "long_desc",
                        "default",
                        "daemon_default",
                        "tags",
                        "services",
                        "see_also",
                        "enum_values",
                        "min",
                        "max",
                        "can_update_at_runtime",
                        "flags"
                    ],
                    "name": "R39A0Bunyp200",
                    "properties": [],
                    "object": {
                        "type": "object",
                        "name": "R39A0Bunyp200I",
                        "properties": [
                            {
                                "name": "name",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Name of the config option"
                            },
                            {
                                "name": "type",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Config option type"
                            },
                            {
                                "name": "level",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Config option level"
                            },
                            {
                                "name": "desc",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Description of the configuration"
                            },
                            {
                                "name": "long_desc",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Elaborated description"
                            },
                            {
                                "name": "default",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Default value for the config option"
                            },
                            {
                                "name": "daemon_default",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Daemon specific default value"
                            },
                            {
                                "name": "tags",
                                "type": "array",
                                "typeItems": "string",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Tags associated with the cluster"
                            },
                            {
                                "name": "services",
                                "type": "array",
                                "typeItems": "string",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Services associated with the config option"
                            },
                            {
                                "name": "see_also",
                                "type": "array",
                                "typeItems": "string",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Related config options"
                            },
                            {
                                "name": "enum_values",
                                "type": "array",
                                "typeItems": "string",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "List of enums allowed"
                            },
                            {
                                "name": "min",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Minimum value"
                            },
                            {
                                "name": "max",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Maximum value"
                            },
                            {
                                "name": "can_update_at_runtime",
                                "type": "boolean",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Check if can update at runtime"
                            },
                            {
                                "name": "flags",
                                "type": "array",
                                "typeItems": "string",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "List of flags associated"
                            }
                        ]
                    },
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R39A0Bjzis400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R39A0Bc2lc401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R39A0Bjrpe403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R39A0Bi47z500",
                    "headers": []
                }
            ]
        },
        {
            "index": "40",
            "path": "/api/cluster_conf/${name}",
            "serviceName": "serv40ClusterConfiguration0",
            "method": "fetch",
            "summary": "",
            "desc": "Manage Cluster Configurations",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? name",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "ClusterConfiguration",
            "parameters": [
                {
                    "name": "name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "ClusterConfiguration",
            "operationId": "serv40ClusterConfiguration0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R40A0Bkiwq200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R40A0B55hj400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R40A0B1xbc401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R40A0Bc1hp403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R40A0B781c500",
                    "headers": []
                }
            ]
        },
        {
            "index": "40",
            "path": "/api/cluster_conf/${name}",
            "serviceName": "serv40ClusterConfiguration1",
            "method": "delete",
            "summary": "",
            "desc": "Manage Cluster Configurations",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? name, String? section",
            "query": "?section=$section",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "ClusterConfiguration",
            "parameters": [
                {
                    "name": "name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "section",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "ClusterConfiguration",
            "operationId": "serv40ClusterConfiguration1",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R40A1Byvr2202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "204",
                    "description": "Resource deleted.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R40A1B9mzm204",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R40A1Bpojb400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R40A1B2udu401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R40A1Bwzxo403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R40A1B5o6f500",
                    "headers": []
                }
            ]
        },
        {
            "index": "41",
            "path": "/api/crush_rule",
            "serviceName": "serv41CrushRule0",
            "method": "fetch",
            "summary": "List Crush Rule Configuration",
            "desc": "Crush Rule Management API",
            "responseType": "R41A0Byp0r200",
            "hasResponse": true,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "CrushRule",
            "parameters": [],
            "tag": "CrushRule",
            "operationId": "serv41CrushRule0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v2.0+json",
                    "component": "",
                    "required": [
                        "rule_id",
                        "rule_name",
                        "ruleset",
                        "type",
                        "min_size",
                        "max_size",
                        "steps"
                    ],
                    "name": "R41A0Byp0r200",
                    "properties": [
                        {
                            "name": "rule_id",
                            "type": "integer",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Rule ID"
                        },
                        {
                            "name": "rule_name",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Rule Name"
                        },
                        {
                            "name": "ruleset",
                            "type": "integer",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "RuleSet related to the rule"
                        },
                        {
                            "name": "type",
                            "type": "integer",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Type of Rule"
                        },
                        {
                            "name": "min_size",
                            "type": "integer",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Minimum size of Rule"
                        },
                        {
                            "name": "max_size",
                            "type": "integer",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Maximum size of Rule"
                        },
                        {
                            "name": "steps",
                            "type": "array",
                            "typeItems": "object",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Steps included in the rule"
                        }
                    ],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R41A0Bk5ro400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R41A0B0ruc401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R41A0Bp5zn403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R41A0Bb0nc500",
                    "headers": []
                }
            ]
        },
        {
            "index": "41",
            "path": "/api/crush_rule",
            "serviceName": "serv41CrushRule1",
            "method": "post",
            "summary": "",
            "desc": "Crush Rule Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "CrushRule",
            "parameters": [],
            "tag": "CrushRule",
            "operationId": "serv41CrushRule1",
            "requestBody": {
                "required": [
                    "name",
                    "root",
                    "failure_domain"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "root",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "failure_domain",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "device_class",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R41A1Bkcim201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R41A1Bgzk9202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R41A1B89uw400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R41A1Bnsmi401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R41A1Bdbps403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R41A1Bfcj9500",
                    "headers": []
                }
            ]
        },
        {
            "index": "42",
            "path": "/api/crush_rule/${name}",
            "serviceName": "serv42CrushRule0",
            "method": "fetch",
            "summary": "",
            "desc": "Crush Rule Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? name",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "CrushRule",
            "parameters": [
                {
                    "name": "name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "CrushRule",
            "operationId": "serv42CrushRule0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v2.0+json",
                    "component": "",
                    "required": [],
                    "name": "R42A0Bdcjc200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R42A0Baif2400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R42A0B21o9401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R42A0Bpd72403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R42A0Btedi500",
                    "headers": []
                }
            ]
        },
        {
            "index": "42",
            "path": "/api/crush_rule/${name}",
            "serviceName": "serv42CrushRule1",
            "method": "delete",
            "summary": "",
            "desc": "Crush Rule Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? name",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "CrushRule",
            "parameters": [
                {
                    "name": "name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "CrushRule",
            "operationId": "serv42CrushRule1",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R42A1Bs8mj202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "204",
                    "description": "Resource deleted.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R42A1B5rrn204",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R42A1Bp2j9400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R42A1Bk1eb401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R42A1B8p1r403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R42A1B7e36500",
                    "headers": []
                }
            ]
        },
        {
            "index": "43",
            "path": "/api/daemon/${daemon_name}",
            "serviceName": "serv43Daemon0",
            "method": "update",
            "summary": "",
            "desc": "Perform actions on daemons",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? daemon_name",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "daemon_name",
            "jsonParam": ", json.encode({\"daemon_name\": \"${daemon_name}\"})",
            "name": "Daemon",
            "parameters": [
                {
                    "name": "daemon_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Daemon",
            "operationId": "serv43Daemon0",
            "requestBody": {
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "action",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "container_image",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v0.1+json",
                    "component": "",
                    "required": [],
                    "name": "R43A0Bt812200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v0.1+json",
                    "component": "",
                    "required": [],
                    "name": "R43A0Btru6202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R43A0Bpbi3400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R43A0By16n401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R43A0Bvfis403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R43A0B7e0a500",
                    "headers": []
                }
            ]
        },
        {
            "index": "44",
            "path": "/api/erasure_code_profile",
            "serviceName": "serv44ErasureCodeProfile0",
            "method": "fetch",
            "summary": "List Erasure Code Profile Information",
            "desc": "Erasure Code Profile Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "ErasureCodeProfile",
            "parameters": [],
            "tag": "ErasureCodeProfile",
            "operationId": "serv44ErasureCodeProfile0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "crush-failure-domain",
                        "k",
                        "m",
                        "plugin",
                        "technique",
                        "name"
                    ],
                    "name": "R44A0B1afx200",
                    "properties": [],
                    "object": {
                        "type": "object",
                        "name": "R44A0B1afx200I",
                        "properties": [
                            {
                                "name": "crush-failure-domain",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "k",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Number of data chunks"
                            },
                            {
                                "name": "m",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Number of coding chunks"
                            },
                            {
                                "name": "plugin",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Plugin Info"
                            },
                            {
                                "name": "technique",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "name",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Name of the profile"
                            }
                        ]
                    },
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R44A0Bi2a9400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R44A0Bxkze401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R44A0Bug5u403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R44A0B0tay500",
                    "headers": []
                }
            ]
        },
        {
            "index": "44",
            "path": "/api/erasure_code_profile",
            "serviceName": "serv44ErasureCodeProfile1",
            "method": "post",
            "summary": "",
            "desc": "Erasure Code Profile Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "ErasureCodeProfile",
            "parameters": [],
            "tag": "ErasureCodeProfile",
            "operationId": "serv44ErasureCodeProfile1",
            "requestBody": {
                "required": [
                    "name"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R44A1Bd05l201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R44A1Bkbne202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R44A1Brvh9400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R44A1Bmgkb401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R44A1Bh9cf403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R44A1Ba0hj500",
                    "headers": []
                }
            ]
        },
        {
            "index": "45",
            "path": "/api/erasure_code_profile/${name}",
            "serviceName": "serv45ErasureCodeProfile0",
            "method": "fetch",
            "summary": "",
            "desc": "Erasure Code Profile Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? name",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "ErasureCodeProfile",
            "parameters": [
                {
                    "name": "name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "ErasureCodeProfile",
            "operationId": "serv45ErasureCodeProfile0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R45A0Bvjs9200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R45A0Bq42e400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R45A0Bjiyi401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R45A0Bwcef403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R45A0Bdbem500",
                    "headers": []
                }
            ]
        },
        {
            "index": "45",
            "path": "/api/erasure_code_profile/${name}",
            "serviceName": "serv45ErasureCodeProfile1",
            "method": "delete",
            "summary": "",
            "desc": "Erasure Code Profile Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? name",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "ErasureCodeProfile",
            "parameters": [
                {
                    "name": "name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "ErasureCodeProfile",
            "operationId": "serv45ErasureCodeProfile1",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R45A1Bsz2h202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "204",
                    "description": "Resource deleted.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R45A1B5nkg204",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R45A1Bmbja400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R45A1By75i401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R45A1B0z0g403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R45A1B3ftj500",
                    "headers": []
                }
            ]
        },
        {
            "index": "46",
            "path": "/api/feature_toggles",
            "serviceName": "serv46FeatureTogglesEndpoint0",
            "method": "fetch",
            "summary": "Get List Of Features",
            "desc": "Manage Features API",
            "responseType": "R46A0Bf5gc200",
            "hasResponse": true,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "FeatureTogglesEndpoint",
            "parameters": [],
            "tag": "FeatureTogglesEndpoint",
            "operationId": "serv46FeatureTogglesEndpoint0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "rbd",
                        "mirroring",
                        "iscsi",
                        "cephfs",
                        "rgw",
                        "nfs"
                    ],
                    "name": "R46A0Bf5gc200",
                    "properties": [
                        {
                            "name": "rbd",
                            "type": "boolean",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "mirroring",
                            "type": "boolean",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "iscsi",
                            "type": "boolean",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "cephfs",
                            "type": "boolean",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "rgw",
                            "type": "boolean",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "nfs",
                            "type": "boolean",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        }
                    ],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R46A0Bwf3b400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R46A0Baxvi401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R46A0Bzjrf403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R46A0Brfxr500",
                    "headers": []
                }
            ]
        },
        {
            "index": "47",
            "path": "/api/feedback",
            "serviceName": "serv47Report0",
            "method": "fetch",
            "summary": "",
            "desc": "Feedback API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Report",
            "parameters": [],
            "tag": "Report",
            "operationId": "serv47Report0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v0.1+json",
                    "component": "",
                    "required": [],
                    "name": "R47A0Bmf91200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R47A0Bpog9400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R47A0B7t2e401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R47A0Bcmoz403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R47A0Bgy6e500",
                    "headers": []
                }
            ]
        },
        {
            "index": "47",
            "path": "/api/feedback",
            "serviceName": "serv47Report1",
            "method": "post",
            "summary": "",
            "desc": "Feedback API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "Report",
            "parameters": [],
            "tag": "Report",
            "operationId": "serv47Report1",
            "requestBody": {
                "required": [
                    "project",
                    "tracker",
                    "subject",
                    "description"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "project",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "tracker",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "subject",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "description",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "api_key",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v0.1+json",
                    "component": "",
                    "required": [],
                    "name": "R47A1Bqro5201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v0.1+json",
                    "component": "",
                    "required": [],
                    "name": "R47A1Bq3n9202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R47A1Br3as400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R47A1B01sw401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R47A1Bp3e5403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R47A1Bexok500",
                    "headers": []
                }
            ]
        },
        {
            "index": "48",
            "path": "/api/feedback/api_key",
            "serviceName": "serv48Report0",
            "method": "fetch",
            "summary": "",
            "desc": "Feedback API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Report",
            "parameters": [],
            "tag": "Report",
            "operationId": "serv48Report0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v0.1+json",
                    "component": "",
                    "required": [],
                    "name": "R48A0Bku5r200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R48A0Bunhq400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R48A0Bj99g401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R48A0Bw3dq403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R48A0B424g500",
                    "headers": []
                }
            ]
        },
        {
            "index": "48",
            "path": "/api/feedback/api_key",
            "serviceName": "serv48Report1",
            "method": "post",
            "summary": "",
            "desc": "Feedback API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "Report",
            "parameters": [],
            "tag": "Report",
            "operationId": "serv48Report1",
            "requestBody": {
                "required": [
                    "api_key"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "api_key",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v0.1+json",
                    "component": "",
                    "required": [],
                    "name": "R48A1Bxw4m201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v0.1+json",
                    "component": "",
                    "required": [],
                    "name": "R48A1Bgcet202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R48A1Bd4eo400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R48A1Bvhv3401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R48A1Bcark403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R48A1Bm8qw500",
                    "headers": []
                }
            ]
        },
        {
            "index": "48",
            "path": "/api/feedback/api_key",
            "serviceName": "serv48Report2",
            "method": "delete",
            "summary": "",
            "desc": "Feedback API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Report",
            "parameters": [],
            "tag": "Report",
            "operationId": "serv48Report2",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v0.1+json",
                    "component": "",
                    "required": [],
                    "name": "R48A2Beipw202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "204",
                    "description": "Resource deleted.",
                    "contentType": "application/vnd.ceph.api.v0.1+json",
                    "component": "",
                    "required": [],
                    "name": "R48A2Bhor8204",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R48A2Bh8pq400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R48A2Bcyyn401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R48A2B0dkd403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R48A2Bgfe9500",
                    "headers": []
                }
            ]
        },
        {
            "index": "49",
            "path": "/api/grafana/dashboards",
            "serviceName": "serv49Grafana0",
            "method": "post",
            "summary": "",
            "desc": "Grafana Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "Grafana",
            "parameters": [],
            "tag": "Grafana",
            "operationId": "serv49Grafana0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R49A0B4ce4201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R49A0B3j5k202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R49A0Binnj400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R49A0Bsy1e401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R49A0B7wpu403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R49A0Bfvc2500",
                    "headers": []
                }
            ]
        },
        {
            "index": "50",
            "path": "/api/grafana/url",
            "serviceName": "serv50Grafana0",
            "method": "fetch",
            "summary": "List Grafana URL Instance",
            "desc": "Grafana Management API",
            "responseType": "R50A0Brro2200",
            "hasResponse": true,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Grafana",
            "parameters": [],
            "tag": "Grafana",
            "operationId": "serv50Grafana0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "instance"
                    ],
                    "name": "R50A0Brro2200",
                    "properties": [
                        {
                            "name": "instance",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "grafana instance"
                        }
                    ],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R50A0Bc0p7400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R50A0B9a4n401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R50A0Bxxbg403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R50A0Bzawp500",
                    "headers": []
                }
            ]
        },
        {
            "index": "51",
            "path": "/api/grafana/validation/${params}",
            "serviceName": "serv51Grafana0",
            "method": "fetch",
            "summary": "",
            "desc": "Grafana Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? params",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Grafana",
            "parameters": [
                {
                    "name": "params",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Grafana",
            "operationId": "serv51Grafana0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R51A0Bpo78200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R51A0Bnwlr400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R51A0B4yhr401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R51A0B8cyc403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R51A0Buqvq500",
                    "headers": []
                }
            ]
        },
        {
            "index": "52",
            "path": "/api/health/full",
            "serviceName": "serv52Health0",
            "method": "fetch",
            "summary": "",
            "desc": "Display Detailed Cluster health Status",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Health",
            "parameters": [],
            "tag": "Health",
            "operationId": "serv52Health0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R52A0Bwgq3200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R52A0B2awl400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R52A0B2gir401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R52A0B64gq403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R52A0B8yse500",
                    "headers": []
                }
            ]
        },
        {
            "index": "53",
            "path": "/api/health/minimal",
            "serviceName": "serv53Health0",
            "method": "fetch",
            "summary": "Get Cluster's minimal health report",
            "desc": "Display Detailed Cluster health Status",
            "responseType": "R53A0Bjvtl200",
            "hasResponse": true,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Health",
            "parameters": [],
            "tag": "Health",
            "operationId": "serv53Health0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "client_perf",
                        "df",
                        "fs_map",
                        "health",
                        "hosts",
                        "iscsi_daemons",
                        "mgr_map",
                        "mon_status",
                        "osd_map",
                        "pg_info",
                        "pools",
                        "rgw",
                        "scrub_status"
                    ],
                    "name": "R53A0Bjvtl200",
                    "properties": [
                        {
                            "name": "client_perf",
                            "type": "object",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "df",
                            "type": "object",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "fs_map",
                            "type": "object",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "health",
                            "type": "object",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "hosts",
                            "type": "integer",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "iscsi_daemons",
                            "type": "object",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "mgr_map",
                            "type": "object",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "mon_status",
                            "type": "object",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "osd_map",
                            "type": "object",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "pg_info",
                            "type": "object",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "pools",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "rgw",
                            "type": "integer",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "scrub_status",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        }
                    ],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R53A0Bk0ib400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R53A0Bivip401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R53A0Bu4mk403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R53A0Bcarg500",
                    "headers": []
                }
            ]
        },
        {
            "index": "54",
            "path": "/api/host",
            "serviceName": "serv54Host0",
            "method": "fetch",
            "summary": "List Host Specifications",
            "desc": "Get Host Details",
            "responseType": "R54A0B7za2200",
            "hasResponse": true,
            "parametersString": "String? sources, String? facts",
            "query": "?sources=$sources%26facts=$facts",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Host",
            "parameters": [
                {
                    "name": "sources",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Host Sources",
                    "allowEmptyValue": true
                },
                {
                    "name": "facts",
                    "in": "query",
                    "schema": {
                        "type": "boolean"
                    },
                    "description": "Host Facts",
                    "default": false
                }
            ],
            "tag": "Host",
            "operationId": "serv54Host0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.1+json",
                    "component": "",
                    "required": [
                        "hostname",
                        "services",
                        "ceph_version",
                        "addr",
                        "labels",
                        "service_type",
                        "sources",
                        "status"
                    ],
                    "name": "R54A0B7za2200",
                    "properties": [
                        {
                            "name": "hostname",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Hostname"
                        },
                        {
                            "name": "services",
                            "type": "array",
                            "typeItems": "object",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Services related to the host"
                        },
                        {
                            "name": "ceph_version",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Ceph version"
                        },
                        {
                            "name": "addr",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Host address"
                        },
                        {
                            "name": "labels",
                            "type": "array",
                            "typeItems": "string",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Labels related to the host"
                        },
                        {
                            "name": "service_type",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "sources",
                            "type": "object",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Host Sources"
                        },
                        {
                            "name": "status",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        }
                    ],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R54A0B7bqj400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R54A0Burue401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R54A0Bb76j403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R54A0Byp5j500",
                    "headers": []
                }
            ]
        },
        {
            "index": "54",
            "path": "/api/host",
            "serviceName": "serv54Host1",
            "method": "post",
            "summary": "",
            "desc": "Get Host Details",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "Host",
            "parameters": [],
            "tag": "Host",
            "operationId": "serv54Host1",
            "requestBody": {
                "required": [
                    "hostname"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "hostname",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "Hostname"
                    },
                    {
                        "name": "addr",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": "Network Address"
                    },
                    {
                        "name": "labels",
                        "type": "array",
                        "typeItems": "string",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": "Host Labels"
                    },
                    {
                        "name": "status",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": "Host Status"
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v0.1+json",
                    "component": "",
                    "required": [],
                    "name": "R54A1Bydqa201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v0.1+json",
                    "component": "",
                    "required": [],
                    "name": "R54A1Brhiu202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R54A1B6b8m400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R54A1Bpnha401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R54A1B45kp403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R54A1B38uq500",
                    "headers": []
                }
            ]
        },
        {
            "index": "55",
            "path": "/api/host/${hostname}",
            "serviceName": "serv55Host0",
            "method": "fetch",
            "summary": "",
            "desc": "Get Host Details",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? hostname",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Host",
            "parameters": [
                {
                    "name": "hostname",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Host",
            "operationId": "serv55Host0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R55A0Bxawm200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R55A0Bnihi400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R55A0Bfdvf401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R55A0B6i35403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R55A0Bwp1n500",
                    "headers": []
                }
            ]
        },
        {
            "index": "55",
            "path": "/api/host/${hostname}",
            "serviceName": "serv55Host1",
            "method": "update",
            "summary": "",
            "desc": "Get Host Details",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? hostname",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "hostname",
            "jsonParam": ", json.encode({\"hostname\": \"${hostname}\"})",
            "name": "Host",
            "parameters": [
                {
                    "name": "hostname",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Hostname",
                    "required": true
                }
            ],
            "tag": "Host",
            "operationId": "serv55Host1",
            "requestBody": {
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "update_labels",
                        "type": "boolean",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": "Update Labels"
                    },
                    {
                        "name": "labels",
                        "type": "array",
                        "typeItems": "string",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": "Host Labels"
                    },
                    {
                        "name": "maintenance",
                        "type": "boolean",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": "Enter/Exit Maintenance"
                    },
                    {
                        "name": "force",
                        "type": "boolean",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": "Force Enter Maintenance"
                    },
                    {
                        "name": "drain",
                        "type": "boolean",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": "Drain Host"
                    }
                ]
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v0.1+json",
                    "component": "",
                    "name": "R55A1B2v6e200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v0.1+json",
                    "component": "",
                    "required": [],
                    "name": "R55A1B4u5h202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R55A1Bf0dj400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R55A1Bo69b401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R55A1By7bg403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R55A1B8xo8500",
                    "headers": []
                }
            ]
        },
        {
            "index": "55",
            "path": "/api/host/${hostname}",
            "serviceName": "serv55Host2",
            "method": "delete",
            "summary": "",
            "desc": "Get Host Details",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? hostname",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Host",
            "parameters": [
                {
                    "name": "hostname",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Host",
            "operationId": "serv55Host2",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R55A2B30hn202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "204",
                    "description": "Resource deleted.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R55A2B13lo204",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R55A2Brehw400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R55A2Bswbh401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R55A2Bud7l403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R55A2Bttto500",
                    "headers": []
                }
            ]
        },
        {
            "index": "56",
            "path": "/api/host/${hostname}/daemons",
            "serviceName": "serv56Host0",
            "method": "fetch",
            "summary": "",
            "desc": "Get Host Details",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? hostname",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Host",
            "parameters": [
                {
                    "name": "hostname",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Host",
            "operationId": "serv56Host0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R56A0Bw0lz200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R56A0Buxgp400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R56A0Buno7401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R56A0Bqacr403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R56A0Bf5xk500",
                    "headers": []
                }
            ]
        },
        {
            "index": "57",
            "path": "/api/host/${hostname}/devices",
            "serviceName": "serv57Host0",
            "method": "fetch",
            "summary": "",
            "desc": "Get Host Details",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? hostname",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Host",
            "parameters": [
                {
                    "name": "hostname",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Host",
            "operationId": "serv57Host0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R57A0B4lec200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R57A0Brhgc400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R57A0Bwa0f401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R57A0Bysjm403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R57A0Bw11g500",
                    "headers": []
                }
            ]
        },
        {
            "index": "58",
            "path": "/api/host/${hostname}/identify_device",
            "serviceName": "serv58Host0",
            "method": "post",
            "summary": "",
            "desc": "Get Host Details",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? hostname",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "hostname",
            "jsonParam": ", json.encode({\"hostname\": \"${hostname}\"})",
            "name": "Host",
            "parameters": [
                {
                    "name": "hostname",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Host",
            "operationId": "serv58Host0",
            "requestBody": {
                "required": [
                    "device",
                    "duration"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "device",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "duration",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R58A0Benbh201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R58A0Bt9xo202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R58A0Bhjh5400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R58A0Biqer401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R58A0Bt9yh403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R58A0B1wnk500",
                    "headers": []
                }
            ]
        },
        {
            "index": "59",
            "path": "/api/host/${hostname}/inventory",
            "serviceName": "serv59Host0",
            "method": "fetch",
            "summary": "Get inventory of a host",
            "desc": "Get Host Details",
            "responseType": "R59A0Bzyea200",
            "hasResponse": true,
            "parametersString": "String? hostname, String? refresh",
            "query": "?refresh=$refresh",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Host",
            "parameters": [
                {
                    "name": "hostname",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Hostname",
                    "required": true
                },
                {
                    "name": "refresh",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Trigger asynchronous refresh",
                    "allowEmptyValue": true
                }
            ],
            "tag": "Host",
            "operationId": "serv59Host0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "name",
                        "addr",
                        "devices",
                        "labels"
                    ],
                    "name": "R59A0Bzyea200",
                    "properties": [
                        {
                            "name": "name",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Hostname"
                        },
                        {
                            "name": "addr",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Host address"
                        },
                        {
                            "name": "devices",
                            "type": "array",
                            "typeItems": "object",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Host devices"
                        },
                        {
                            "name": "labels",
                            "type": "array",
                            "typeItems": "string",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Host labels"
                        }
                    ],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R59A0Br3t9400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R59A0Bwnnb401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R59A0Bhiro403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R59A0Bt4kq500",
                    "headers": []
                }
            ]
        },
        {
            "index": "60",
            "path": "/api/host/${hostname}/smart",
            "serviceName": "serv60Host0",
            "method": "fetch",
            "summary": "",
            "desc": "Get Host Details",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? hostname",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Host",
            "parameters": [
                {
                    "name": "hostname",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Host",
            "operationId": "serv60Host0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R60A0Bl1pa200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R60A0Bu9rr400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R60A0Bon6m401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R60A0B0onq403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R60A0Bnntz500",
                    "headers": []
                }
            ]
        },
        {
            "index": "61",
            "path": "/api/iscsi/discoveryauth",
            "serviceName": "serv61Iscsi0",
            "method": "fetch",
            "summary": "Get Iscsi discoveryauth Details",
            "desc": "Iscsi Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Iscsi",
            "parameters": [],
            "tag": "Iscsi",
            "operationId": "serv61Iscsi0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "user",
                        "password",
                        "mutual_user",
                        "mutual_password"
                    ],
                    "name": "R61A0Bn576200",
                    "properties": [],
                    "object": {
                        "type": "object",
                        "name": "R61A0Bn576200I",
                        "properties": [
                            {
                                "name": "user",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "username"
                            },
                            {
                                "name": "password",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "password"
                            },
                            {
                                "name": "mutual_user",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "mutual_password",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            }
                        ]
                    },
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R61A0Bswdj400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R61A0B1dj6401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R61A0Bhqrc403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R61A0Br4pq500",
                    "headers": []
                }
            ]
        },
        {
            "index": "61",
            "path": "/api/iscsi/discoveryauth",
            "serviceName": "serv61Iscsi1",
            "method": "update",
            "summary": "Set Iscsi discoveryauth",
            "desc": "Iscsi Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? user, String? password, String? mutual_user, String? mutual_password",
            "query": "?user=$user%26password=$password%26mutual_user=$mutual_user%26mutual_password=$mutual_password",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "user, password, mutual_user, mutual_password",
            "jsonParam": ", json.encode({\"user\": \"${user}\", \"password\": \"${password}\", \"mutual_user\": \"${mutual_user}\", \"mutual_password\": \"${mutual_password}\"})",
            "name": "Iscsi",
            "parameters": [
                {
                    "name": "user",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Username",
                    "required": true
                },
                {
                    "name": "password",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Password",
                    "required": true
                },
                {
                    "name": "mutual_user",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Mutual UserName",
                    "required": true
                },
                {
                    "name": "mutual_password",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Mutual Password",
                    "required": true
                }
            ],
            "tag": "Iscsi",
            "operationId": "serv61Iscsi1",
            "requestBody": {
                "required": [
                    "user",
                    "password",
                    "mutual_user",
                    "mutual_password"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "user",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "Username"
                    },
                    {
                        "name": "password",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "Password"
                    },
                    {
                        "name": "mutual_user",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "Mutual UserName"
                    },
                    {
                        "name": "mutual_password",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "Mutual Password"
                    }
                ]
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R61A1B7e5c200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R61A1Be9oo202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R61A1B5042400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R61A1B6fmi401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R61A1Be9ek403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R61A1Bwug4500",
                    "headers": []
                }
            ]
        },
        {
            "index": "62",
            "path": "/api/iscsi/target",
            "serviceName": "serv62IscsiTarget0",
            "method": "fetch",
            "summary": "",
            "desc": "Get Iscsi Target Details",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "IscsiTarget",
            "parameters": [],
            "tag": "IscsiTarget",
            "operationId": "serv62IscsiTarget0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R62A0Bljio200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R62A0B8dvi400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R62A0B3rmm401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R62A0Breiv403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R62A0B1ekl500",
                    "headers": []
                }
            ]
        },
        {
            "index": "62",
            "path": "/api/iscsi/target",
            "serviceName": "serv62IscsiTarget1",
            "method": "post",
            "summary": "",
            "desc": "Get Iscsi Target Details",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "IscsiTarget",
            "parameters": [],
            "tag": "IscsiTarget",
            "operationId": "serv62IscsiTarget1",
            "requestBody": {
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "target_iqn",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "target_controls",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "acl_enabled",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "auth",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "portals",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "disks",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "clients",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "groups",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R62A1Bgfta201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R62A1B78tr202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R62A1Bhbyh400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R62A1Bleiw401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R62A1Bylm8403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R62A1Bdweq500",
                    "headers": []
                }
            ]
        },
        {
            "index": "63",
            "path": "/api/iscsi/target/${target_iqn}",
            "serviceName": "serv63IscsiTarget0",
            "method": "fetch",
            "summary": "",
            "desc": "Get Iscsi Target Details",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? target_iqn",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "IscsiTarget",
            "parameters": [
                {
                    "name": "target_iqn",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "IscsiTarget",
            "operationId": "serv63IscsiTarget0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R63A0Bz6ud200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R63A0Bkknc400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R63A0Bk499401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R63A0Bb0vk403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R63A0Bxgbr500",
                    "headers": []
                }
            ]
        },
        {
            "index": "63",
            "path": "/api/iscsi/target/${target_iqn}",
            "serviceName": "serv63IscsiTarget1",
            "method": "update",
            "summary": "",
            "desc": "Get Iscsi Target Details",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? target_iqn",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "target_iqn",
            "jsonParam": ", json.encode({\"target_iqn\": \"${target_iqn}\"})",
            "name": "IscsiTarget",
            "parameters": [
                {
                    "name": "target_iqn",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "IscsiTarget",
            "operationId": "serv63IscsiTarget1",
            "requestBody": {
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "new_target_iqn",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "target_controls",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "acl_enabled",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "auth",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "portals",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "disks",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "clients",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "groups",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R63A1B996d200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R63A1Bxzer202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R63A1Bo0zb400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R63A1Bgr4r401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R63A1Bs753403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R63A1B3njk500",
                    "headers": []
                }
            ]
        },
        {
            "index": "63",
            "path": "/api/iscsi/target/${target_iqn}",
            "serviceName": "serv63IscsiTarget2",
            "method": "delete",
            "summary": "",
            "desc": "Get Iscsi Target Details",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? target_iqn",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "IscsiTarget",
            "parameters": [
                {
                    "name": "target_iqn",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "IscsiTarget",
            "operationId": "serv63IscsiTarget2",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R63A2Bs174202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "204",
                    "description": "Resource deleted.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R63A2Brnoi204",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R63A2Bgg3e400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R63A2Bc8oi401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R63A2B60nh403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R63A2Bbz7o500",
                    "headers": []
                }
            ]
        },
        {
            "index": "64",
            "path": "/api/logs/all",
            "serviceName": "serv64Logs0",
            "method": "fetch",
            "summary": "Display Logs Configuration",
            "desc": "Logs Management API",
            "responseType": "R64A0Bdvzs200",
            "hasResponse": true,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Logs",
            "parameters": [],
            "tag": "Logs",
            "operationId": "serv64Logs0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "clog",
                        "audit_log"
                    ],
                    "name": "R64A0Bdvzs200",
                    "properties": [
                        {
                            "name": "clog",
                            "type": "array",
                            "typeItems": "string",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "audit_log",
                            "type": "array",
                            "typeItems": "object",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Audit log"
                        }
                    ],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R64A0Biq68400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R64A0Bprkm401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R64A0Bgvy2403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R64A0Bx45d500",
                    "headers": []
                }
            ]
        },
        {
            "index": "65",
            "path": "/api/mgr/module",
            "serviceName": "serv65MgrModule0",
            "method": "fetch",
            "summary": "List Mgr modules",
            "desc": "Get details of MGR Module",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "MgrModule",
            "parameters": [],
            "tag": "MgrModule",
            "operationId": "serv65MgrModule0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "name",
                        "enabled",
                        "always_on",
                        "options"
                    ],
                    "name": "R65A0B0yao200",
                    "properties": [],
                    "object": {
                        "type": "object",
                        "name": "R65A0B0yao200I",
                        "properties": [
                            {
                                "name": "name",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Module Name"
                            },
                            {
                                "name": "enabled",
                                "type": "boolean",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Is Module Enabled"
                            },
                            {
                                "name": "always_on",
                                "type": "boolean",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Is it an always on module?"
                            },
                            {
                                "name": "options",
                                "type": "object",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Module Options"
                            }
                        ]
                    },
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R65A0Bz4an400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R65A0Bfene401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R65A0B6uq7403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R65A0B8p5d500",
                    "headers": []
                }
            ]
        },
        {
            "index": "66",
            "path": "/api/mgr/module/${module_name}",
            "serviceName": "serv66MgrModule0",
            "method": "fetch",
            "summary": "",
            "desc": "Get details of MGR Module",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? module_name",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "MgrModule",
            "parameters": [
                {
                    "name": "module_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "MgrModule",
            "operationId": "serv66MgrModule0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R66A0Bxxim200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R66A0B5ris400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R66A0Bz42j401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R66A0Btwdr403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R66A0Biyoo500",
                    "headers": []
                }
            ]
        },
        {
            "index": "66",
            "path": "/api/mgr/module/${module_name}",
            "serviceName": "serv66MgrModule1",
            "method": "update",
            "summary": "",
            "desc": "Get details of MGR Module",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? module_name",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "module_name",
            "jsonParam": ", json.encode({\"module_name\": \"${module_name}\"})",
            "name": "MgrModule",
            "parameters": [
                {
                    "name": "module_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "MgrModule",
            "operationId": "serv66MgrModule1",
            "requestBody": {
                "required": [
                    "config"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "config",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R66A1B33c9200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R66A1B6w8h202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R66A1Bavd5400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R66A1B20q9401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R66A1Bllwd403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R66A1Bqvwt500",
                    "headers": []
                }
            ]
        },
        {
            "index": "67",
            "path": "/api/mgr/module/${module_name}/disable",
            "serviceName": "serv67MgrModule0",
            "method": "post",
            "summary": "",
            "desc": "Get details of MGR Module",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? module_name",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "module_name",
            "jsonParam": ", json.encode({\"module_name\": \"${module_name}\"})",
            "name": "MgrModule",
            "parameters": [
                {
                    "name": "module_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "MgrModule",
            "operationId": "serv67MgrModule0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R67A0Bqglw201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R67A0Bh3kx202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R67A0Buun9400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R67A0B84lb401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R67A0Be6pq403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R67A0Bhg2a500",
                    "headers": []
                }
            ]
        },
        {
            "index": "68",
            "path": "/api/mgr/module/${module_name}/enable",
            "serviceName": "serv68MgrModule0",
            "method": "post",
            "summary": "",
            "desc": "Get details of MGR Module",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? module_name",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "module_name",
            "jsonParam": ", json.encode({\"module_name\": \"${module_name}\"})",
            "name": "MgrModule",
            "parameters": [
                {
                    "name": "module_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "MgrModule",
            "operationId": "serv68MgrModule0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R68A0Bak78201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R68A0Ba3tx202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R68A0Bins3400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R68A0Bp2jv401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R68A0Bu2kr403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R68A0B3n5c500",
                    "headers": []
                }
            ]
        },
        {
            "index": "69",
            "path": "/api/mgr/module/${module_name}/options",
            "serviceName": "serv69MgrModule0",
            "method": "fetch",
            "summary": "",
            "desc": "Get details of MGR Module",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? module_name",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "MgrModule",
            "parameters": [
                {
                    "name": "module_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "MgrModule",
            "operationId": "serv69MgrModule0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R69A0Bq598200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R69A0B4xkh400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R69A0Bnca7401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R69A0Bzfbo403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R69A0Bmvqh500",
                    "headers": []
                }
            ]
        },
        {
            "index": "70",
            "path": "/api/monitor",
            "serviceName": "serv70Monitor0",
            "method": "fetch",
            "summary": "Get Monitor Details",
            "desc": "Get Monitor Details",
            "responseType": "R70A0Bm6r9200",
            "hasResponse": true,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Monitor",
            "parameters": [],
            "tag": "Monitor",
            "operationId": "serv70Monitor0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "mon_status",
                        "in_quorum",
                        "out_quorum"
                    ],
                    "name": "R70A0Bm6r9200",
                    "properties": [
                        {
                            "name": "mon_status",
                            "type": "object",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "in_quorum",
                            "type": "array",
                            "typeItems": "object",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "out_quorum",
                            "type": "array",
                            "typeItems": "integer",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        }
                    ],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R70A0B7n57400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R70A0B05zh401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R70A0Bryom403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R70A0Ba65c500",
                    "headers": []
                }
            ]
        },
        {
            "index": "71",
            "path": "/api/nfs-ganesha/cluster",
            "serviceName": "serv71NFSGanesha0",
            "method": "fetch",
            "summary": "",
            "desc": "NFS-Ganesha Cluster Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "NFS-Ganesha",
            "parameters": [],
            "tag": "NFS-Ganesha",
            "operationId": "serv71NFSGanesha0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v0.1+json",
                    "component": "",
                    "required": [],
                    "name": "R71A0Bu297200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R71A0B0dd4400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R71A0Bmbv1401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R71A0Btun4403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R71A0Bm48q500",
                    "headers": []
                }
            ]
        },
        {
            "index": "72",
            "path": "/api/nfs-ganesha/export",
            "serviceName": "serv72NFSGanesha0",
            "method": "fetch",
            "summary": "List all NFS-Ganesha exports",
            "desc": "NFS-Ganesha Cluster Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "NFS-Ganesha",
            "parameters": [],
            "tag": "NFS-Ganesha",
            "operationId": "serv72NFSGanesha0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "export_id",
                        "path",
                        "cluster_id",
                        "pseudo",
                        "access_type",
                        "squash",
                        "security_label",
                        "protocols",
                        "transports",
                        "fsal",
                        "clients"
                    ],
                    "name": "R72A0Bydqv200",
                    "properties": [],
                    "object": {
                        "type": "object",
                        "name": "R72A0Bydqv200I",
                        "properties": [
                            {
                                "name": "export_id",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Export ID"
                            },
                            {
                                "name": "path",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Export path"
                            },
                            {
                                "name": "cluster_id",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Cluster identifier"
                            },
                            {
                                "name": "pseudo",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Pseudo FS path"
                            },
                            {
                                "name": "access_type",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Export access type"
                            },
                            {
                                "name": "squash",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Export squash policy"
                            },
                            {
                                "name": "security_label",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Security label"
                            },
                            {
                                "name": "protocols",
                                "type": "array",
                                "typeItems": "integer",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "List of protocol types"
                            },
                            {
                                "name": "transports",
                                "type": "array",
                                "typeItems": "string",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "List of transport types"
                            },
                            {
                                "name": "fsal",
                                "type": "object",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "FSAL configuration"
                            },
                            {
                                "name": "clients",
                                "type": "array",
                                "typeItems": "object",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "List of client configurations"
                            }
                        ]
                    },
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R72A0Bodlo400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R72A0Bxftl401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R72A0Bxzuh403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R72A0Bdhes500",
                    "headers": []
                }
            ]
        },
        {
            "index": "72",
            "path": "/api/nfs-ganesha/export",
            "serviceName": "serv72NFSGanesha1",
            "method": "post",
            "summary": "Creates a new NFS-Ganesha export",
            "desc": "NFS-Ganesha Cluster Management API",
            "responseType": "R72A1B091z201",
            "hasResponse": true,
            "parametersString": "",
            "query": "",
            "requestPayload": ", r72a1b091z201",
            "requestPayloadStatement": "const r72a1b091z201 = R72A1B091z201();",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "NFS-Ganesha",
            "parameters": [],
            "tag": "NFS-Ganesha",
            "operationId": "serv72NFSGanesha1",
            "requestBody": {
                "required": [
                    "path",
                    "cluster_id",
                    "pseudo",
                    "access_type",
                    "squash",
                    "security_label",
                    "protocols",
                    "transports",
                    "fsal",
                    "clients"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "path",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "Export path"
                    },
                    {
                        "name": "cluster_id",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "Cluster identifier"
                    },
                    {
                        "name": "pseudo",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "Pseudo FS path"
                    },
                    {
                        "name": "access_type",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "Export access type"
                    },
                    {
                        "name": "squash",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "Export squash policy"
                    },
                    {
                        "name": "security_label",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "Security label"
                    },
                    {
                        "name": "protocols",
                        "type": "array",
                        "typeItems": "integer",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "List of protocol types"
                    },
                    {
                        "name": "transports",
                        "type": "array",
                        "typeItems": "string",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "List of transport types"
                    },
                    {
                        "name": "fsal",
                        "type": "object",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "FSAL configuration"
                    },
                    {
                        "name": "clients",
                        "type": "array",
                        "typeItems": "object",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "List of client configurations"
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v2.0+json",
                    "component": "",
                    "required": [
                        "export_id",
                        "path",
                        "cluster_id",
                        "pseudo",
                        "access_type",
                        "squash",
                        "security_label",
                        "protocols",
                        "transports",
                        "fsal",
                        "clients"
                    ],
                    "name": "R72A1B091z201",
                    "properties": [
                        {
                            "name": "export_id",
                            "type": "integer",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Export ID"
                        },
                        {
                            "name": "path",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Export path"
                        },
                        {
                            "name": "cluster_id",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Cluster identifier"
                        },
                        {
                            "name": "pseudo",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Pseudo FS path"
                        },
                        {
                            "name": "access_type",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Export access type"
                        },
                        {
                            "name": "squash",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Export squash policy"
                        },
                        {
                            "name": "security_label",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Security label"
                        },
                        {
                            "name": "protocols",
                            "type": "array",
                            "typeItems": "integer",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "List of protocol types"
                        },
                        {
                            "name": "transports",
                            "type": "array",
                            "typeItems": "string",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "List of transport types"
                        },
                        {
                            "name": "fsal",
                            "type": "object",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "FSAL configuration"
                        },
                        {
                            "name": "clients",
                            "type": "array",
                            "typeItems": "object",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "List of client configurations"
                        }
                    ],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v2.0+json",
                    "component": "",
                    "required": [],
                    "name": "R72A1Bprh5202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R72A1B19fv400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R72A1Bnta9401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R72A1Blhlg403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R72A1Bfg2p500",
                    "headers": []
                }
            ]
        },
        {
            "index": "73",
            "path": "/api/nfs-ganesha/export/${cluster_id}/${export_id}",
            "serviceName": "serv73NFSGanesha0",
            "method": "fetch",
            "summary": "Get an NFS-Ganesha export",
            "desc": "NFS-Ganesha Cluster Management API",
            "responseType": "R73A0Bso8m200",
            "hasResponse": true,
            "parametersString": "String? cluster_id, String? export_id",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "NFS-Ganesha",
            "parameters": [
                {
                    "name": "cluster_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Cluster identifier",
                    "required": true
                },
                {
                    "name": "export_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Export ID",
                    "required": true
                }
            ],
            "tag": "NFS-Ganesha",
            "operationId": "serv73NFSGanesha0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "export_id",
                        "path",
                        "cluster_id",
                        "pseudo",
                        "access_type",
                        "squash",
                        "security_label",
                        "protocols",
                        "transports",
                        "fsal",
                        "clients"
                    ],
                    "name": "R73A0Bso8m200",
                    "properties": [
                        {
                            "name": "export_id",
                            "type": "integer",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Export ID"
                        },
                        {
                            "name": "path",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Export path"
                        },
                        {
                            "name": "cluster_id",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Cluster identifier"
                        },
                        {
                            "name": "pseudo",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Pseudo FS path"
                        },
                        {
                            "name": "access_type",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Export access type"
                        },
                        {
                            "name": "squash",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Export squash policy"
                        },
                        {
                            "name": "security_label",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Security label"
                        },
                        {
                            "name": "protocols",
                            "type": "array",
                            "typeItems": "integer",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "List of protocol types"
                        },
                        {
                            "name": "transports",
                            "type": "array",
                            "typeItems": "string",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "List of transport types"
                        },
                        {
                            "name": "fsal",
                            "type": "object",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "FSAL configuration"
                        },
                        {
                            "name": "clients",
                            "type": "array",
                            "typeItems": "object",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "List of client configurations"
                        }
                    ],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R73A0Bxhtw400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R73A0B3ycc401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R73A0B1k9i403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R73A0B7yb5500",
                    "headers": []
                }
            ]
        },
        {
            "index": "73",
            "path": "/api/nfs-ganesha/export/${cluster_id}/${export_id}",
            "serviceName": "serv73NFSGanesha1",
            "method": "update",
            "summary": "Updates an NFS-Ganesha export",
            "desc": "NFS-Ganesha Cluster Management API",
            "responseType": "R73A1Beobh200",
            "hasResponse": true,
            "parametersString": "String? cluster_id, String? export_id",
            "query": "",
            "requestPayload": ", r73a1beobh200",
            "requestPayloadStatement": "const r73a1beobh200 = R73A1Beobh200(cluster_id, export_id);",
            "onlyParam": "cluster_id, export_id",
            "jsonParam": ", json.encode({\"cluster_id\": \"${cluster_id}\", \"export_id\": \"${export_id}\"})",
            "name": "NFS-Ganesha",
            "parameters": [
                {
                    "name": "cluster_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Cluster identifier",
                    "required": true
                },
                {
                    "name": "export_id",
                    "in": "path",
                    "schema": {
                        "type": "integer"
                    },
                    "description": "Export ID",
                    "required": true
                }
            ],
            "tag": "NFS-Ganesha",
            "operationId": "serv73NFSGanesha1",
            "requestBody": {
                "required": [
                    "path",
                    "pseudo",
                    "access_type",
                    "squash",
                    "security_label",
                    "protocols",
                    "transports",
                    "fsal",
                    "clients"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "path",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "Export path"
                    },
                    {
                        "name": "pseudo",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "Pseudo FS path"
                    },
                    {
                        "name": "access_type",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "Export access type"
                    },
                    {
                        "name": "squash",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "Export squash policy"
                    },
                    {
                        "name": "security_label",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "Security label"
                    },
                    {
                        "name": "protocols",
                        "type": "array",
                        "typeItems": "integer",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "List of protocol types"
                    },
                    {
                        "name": "transports",
                        "type": "array",
                        "typeItems": "string",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "List of transport types"
                    },
                    {
                        "name": "fsal",
                        "type": "object",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "FSAL configuration"
                    },
                    {
                        "name": "clients",
                        "type": "array",
                        "typeItems": "object",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "List of client configurations"
                    }
                ]
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v2.0+json",
                    "component": "",
                    "required": [
                        "export_id",
                        "path",
                        "cluster_id",
                        "pseudo",
                        "access_type",
                        "squash",
                        "security_label",
                        "protocols",
                        "transports",
                        "fsal",
                        "clients"
                    ],
                    "name": "R73A1Beobh200",
                    "properties": [
                        {
                            "name": "export_id",
                            "type": "integer",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Export ID"
                        },
                        {
                            "name": "path",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Export path"
                        },
                        {
                            "name": "cluster_id",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Cluster identifier"
                        },
                        {
                            "name": "pseudo",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Pseudo FS path"
                        },
                        {
                            "name": "access_type",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Export access type"
                        },
                        {
                            "name": "squash",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Export squash policy"
                        },
                        {
                            "name": "security_label",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Security label"
                        },
                        {
                            "name": "protocols",
                            "type": "array",
                            "typeItems": "integer",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "List of protocol types"
                        },
                        {
                            "name": "transports",
                            "type": "array",
                            "typeItems": "string",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "List of transport types"
                        },
                        {
                            "name": "fsal",
                            "type": "object",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "FSAL configuration"
                        },
                        {
                            "name": "clients",
                            "type": "array",
                            "typeItems": "object",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "List of client configurations"
                        }
                    ],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v2.0+json",
                    "component": "",
                    "required": [],
                    "name": "R73A1Bgv0j202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R73A1B6cxh400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R73A1Biy2h401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R73A1Bw728403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R73A1Bnmtk500",
                    "headers": []
                }
            ]
        },
        {
            "index": "73",
            "path": "/api/nfs-ganesha/export/${cluster_id}/${export_id}",
            "serviceName": "serv73NFSGanesha2",
            "method": "delete",
            "summary": "Deletes an NFS-Ganesha export",
            "desc": "NFS-Ganesha Cluster Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? cluster_id, String? export_id",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "NFS-Ganesha",
            "parameters": [
                {
                    "name": "cluster_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Cluster identifier",
                    "required": true
                },
                {
                    "name": "export_id",
                    "in": "path",
                    "schema": {
                        "type": "integer"
                    },
                    "description": "Export ID",
                    "required": true
                }
            ],
            "tag": "NFS-Ganesha",
            "operationId": "serv73NFSGanesha2",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v2.0+json",
                    "component": "",
                    "required": [],
                    "name": "R73A2Blgdf202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "204",
                    "description": "Resource deleted.",
                    "contentType": "application/vnd.ceph.api.v2.0+json",
                    "component": "",
                    "required": [],
                    "name": "R73A2Buobt204",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R73A2Bdpt8400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R73A2Bokk2401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R73A2Bal9p403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R73A2Br56j500",
                    "headers": []
                }
            ]
        },
        {
            "index": "74",
            "path": "/api/osd",
            "serviceName": "serv74OSD0",
            "method": "fetch",
            "summary": "",
            "desc": "OSD management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "OSD",
            "parameters": [],
            "tag": "OSD",
            "operationId": "serv74OSD0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R74A0Bvom8200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R74A0Bdcbn400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R74A0Bg74m401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R74A0B4evp403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R74A0Bhh5r500",
                    "headers": []
                }
            ]
        },
        {
            "index": "74",
            "path": "/api/osd",
            "serviceName": "serv74OSD1",
            "method": "post",
            "summary": "",
            "desc": "OSD management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "OSD",
            "parameters": [],
            "tag": "OSD",
            "operationId": "serv74OSD1",
            "requestBody": {
                "required": [
                    "method",
                    "data",
                    "tracking_id"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "method",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "data",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "tracking_id",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R74A1B7yi3201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R74A1Bdz4a202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R74A1Boqdr400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R74A1B7pw8401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R74A1B2zss403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R74A1Bs0ho500",
                    "headers": []
                }
            ]
        },
        {
            "index": "75",
            "path": "/api/osd/flags",
            "serviceName": "serv75OSD0",
            "method": "fetch",
            "summary": "Display OSD Flags",
            "desc": "OSD management API",
            "responseType": "R75A0Bzv5v200",
            "hasResponse": true,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "OSD",
            "parameters": [],
            "tag": "OSD",
            "operationId": "serv75OSD0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "list_of_flags"
                    ],
                    "name": "R75A0Bzv5v200",
                    "properties": [
                        {
                            "name": "list_of_flags",
                            "type": "array",
                            "typeItems": "string",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        }
                    ],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R75A0Bhlm3400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R75A0B3jio401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R75A0Bfx5p403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R75A0Bq8ut500",
                    "headers": []
                }
            ]
        },
        {
            "index": "75",
            "path": "/api/osd/flags",
            "serviceName": "serv75OSD1",
            "method": "update",
            "summary": "Sets OSD flags for the entire cluster.",
            "desc": "OSD management API",
            "responseType": "R75A1Bhpnh200",
            "hasResponse": true,
            "parametersString": "",
            "query": "",
            "requestPayload": ", r75a1bhpnh200",
            "requestPayloadStatement": "const r75a1bhpnh200 = R75A1Bhpnh200();",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "OSD",
            "parameters": [],
            "tag": "OSD",
            "operationId": "serv75OSD1",
            "requestBody": {
                "required": [
                    "flags"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "flags",
                        "type": "array",
                        "typeItems": "string",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "List of flags to set. The flags `recovery_deletes`, `sortbitwise` and `pglog_hardlimit` cannot be unset. Additionally `purged_snapshots` cannot even be set."
                    }
                ]
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "list_of_flags"
                    ],
                    "name": "R75A1Bhpnh200",
                    "properties": [
                        {
                            "name": "list_of_flags",
                            "type": "array",
                            "typeItems": "string",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        }
                    ],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R75A1B4ku8202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R75A1Bvj1w400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R75A1Bfboj401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R75A1Bid2r403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R75A1Bpsna500",
                    "headers": []
                }
            ]
        },
        {
            "index": "76",
            "path": "/api/osd/flags/individual",
            "serviceName": "serv76OSD0",
            "method": "fetch",
            "summary": "Displays individual OSD flags",
            "desc": "OSD management API",
            "responseType": "R76A0B68yu200",
            "hasResponse": true,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "OSD",
            "parameters": [],
            "tag": "OSD",
            "operationId": "serv76OSD0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "osd",
                        "flags"
                    ],
                    "name": "R76A0B68yu200",
                    "properties": [
                        {
                            "name": "osd",
                            "type": "integer",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "OSD ID"
                        },
                        {
                            "name": "flags",
                            "type": "array",
                            "typeItems": "string",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "List of active flags"
                        }
                    ],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R76A0Bkxrl400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R76A0Bhp7x401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R76A0Baedl403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R76A0Bl8af500",
                    "headers": []
                }
            ]
        },
        {
            "index": "76",
            "path": "/api/osd/flags/individual",
            "serviceName": "serv76OSD1",
            "method": "update",
            "summary": "Sets OSD flags for a subset of individual OSDs.",
            "desc": "OSD management API",
            "responseType": "R76A1Bc0aa200",
            "hasResponse": true,
            "parametersString": "",
            "query": "",
            "requestPayload": ", r76a1bc0aa200",
            "requestPayloadStatement": "const r76a1bc0aa200 = R76A1Bc0aa200();",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "OSD",
            "parameters": [],
            "tag": "OSD",
            "operationId": "serv76OSD1",
            "requestBody": {
                "required": [
                    "flags",
                    "ids"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "flags",
                        "type": "object",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "Directory of flags to set or unset. The flags `noin`, `noout`, `noup` and `nodown` are going to be considered only."
                    },
                    {
                        "name": "ids",
                        "type": "array",
                        "typeItems": "integer",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": "List of OSD ids the flags should be applied to."
                    }
                ]
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "added",
                        "removed",
                        "ids"
                    ],
                    "name": "R76A1Bc0aa200",
                    "properties": [
                        {
                            "name": "added",
                            "type": "array",
                            "typeItems": "string",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "List of added flags"
                        },
                        {
                            "name": "removed",
                            "type": "array",
                            "typeItems": "string",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "List of removed flags"
                        },
                        {
                            "name": "ids",
                            "type": "array",
                            "typeItems": "integer",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "List of updated OSDs"
                        }
                    ],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R76A1Ba18k202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R76A1Bczrt400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R76A1B7m8e401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R76A1B93im403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R76A1Bpkwi500",
                    "headers": []
                }
            ]
        },
        {
            "index": "77",
            "path": "/api/osd/safe_to_delete",
            "serviceName": "serv77OSD0",
            "method": "fetch",
            "summary": "",
            "desc": "OSD management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? svc_ids",
            "query": "?svc_ids=$svc_ids",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "OSD",
            "parameters": [
                {
                    "name": "svc_ids",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "OSD",
            "operationId": "serv77OSD0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R77A0Bc2po200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R77A0B2bxx400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R77A0Bcohx401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R77A0Bqtzf403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R77A0Bj644500",
                    "headers": []
                }
            ]
        },
        {
            "index": "78",
            "path": "/api/osd/safe_to_destroy",
            "serviceName": "serv78OSD0",
            "method": "fetch",
            "summary": "Check If OSD is Safe to Destroy",
            "desc": "OSD management API",
            "responseType": "R78A0Bir67200",
            "hasResponse": true,
            "parametersString": "String? ids",
            "query": "?ids=$ids",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "OSD",
            "parameters": [
                {
                    "name": "ids",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "description": "OSD Service Identifier",
                    "required": true
                }
            ],
            "tag": "OSD",
            "operationId": "serv78OSD0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "safe_to_destroy",
                        "active",
                        "missing_stats",
                        "stored_pgs",
                        "is_safe_to_destroy"
                    ],
                    "name": "R78A0Bir67200",
                    "properties": [
                        {
                            "name": "safe_to_destroy",
                            "type": "array",
                            "typeItems": "string",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Is OSD safe to destroy?"
                        },
                        {
                            "name": "active",
                            "type": "array",
                            "typeItems": "integer",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "missing_stats",
                            "type": "array",
                            "typeItems": "string",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "stored_pgs",
                            "type": "array",
                            "typeItems": "string",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Stored Pool groups in Osd"
                        },
                        {
                            "name": "is_safe_to_destroy",
                            "type": "boolean",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Is OSD safe to destroy?"
                        }
                    ],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R78A0Bq4br400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R78A0Bo45b401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R78A0Brgi4403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R78A0Bcs69500",
                    "headers": []
                }
            ]
        },
        {
            "index": "79",
            "path": "/api/osd/settings",
            "serviceName": "serv79OSD0",
            "method": "fetch",
            "summary": "",
            "desc": "OSD management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "OSD",
            "parameters": [],
            "tag": "OSD",
            "operationId": "serv79OSD0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v0.1+json",
                    "component": "",
                    "required": [],
                    "name": "R79A0B4r75200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R79A0Bvj2m400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R79A0Bqha4401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R79A0Bqb72403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R79A0Bw7oc500",
                    "headers": []
                }
            ]
        },
        {
            "index": "80",
            "path": "/api/osd/${svc_id}",
            "serviceName": "serv80OSD0",
            "method": "fetch",
            "summary": "",
            "desc": "OSD management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? svc_id",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "OSD",
            "parameters": [
                {
                    "name": "svc_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "OSD",
            "operationId": "serv80OSD0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R80A0Bjdi7200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R80A0Bswg7400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R80A0Bdx5t401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R80A0But2p403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R80A0Beawg500",
                    "headers": []
                }
            ]
        },
        {
            "index": "80",
            "path": "/api/osd/${svc_id}",
            "serviceName": "serv80OSD1",
            "method": "update",
            "summary": "",
            "desc": "OSD management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? svc_id",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "svc_id",
            "jsonParam": ", json.encode({\"svc_id\": \"${svc_id}\"})",
            "name": "OSD",
            "parameters": [
                {
                    "name": "svc_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "OSD",
            "operationId": "serv80OSD1",
            "requestBody": {
                "required": [
                    "device_class"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "device_class",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R80A1B1g8d200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R80A1Bilfk202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R80A1B8isl400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R80A1Bchdi401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R80A1Bur5w403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R80A1B8cae500",
                    "headers": []
                }
            ]
        },
        {
            "index": "80",
            "path": "/api/osd/${svc_id}",
            "serviceName": "serv80OSD2",
            "method": "delete",
            "summary": "",
            "desc": "OSD management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? svc_id, String? preserve_id, String? force",
            "query": "?preserve_id=$preserve_id%26force=$force",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "OSD",
            "parameters": [
                {
                    "name": "svc_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "preserve_id",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "allowEmptyValue": true
                },
                {
                    "name": "force",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "allowEmptyValue": true
                }
            ],
            "tag": "OSD",
            "operationId": "serv80OSD2",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R80A2B7q8h202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "204",
                    "description": "Resource deleted.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R80A2Boery204",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R80A2Bh0vr400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R80A2B24od401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R80A2B21va403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R80A2Bptqg500",
                    "headers": []
                }
            ]
        },
        {
            "index": "81",
            "path": "/api/osd/${svc_id}/destroy",
            "serviceName": "serv81OSD0",
            "method": "post",
            "summary": "",
            "desc": "OSD management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? svc_id",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "svc_id",
            "jsonParam": ", json.encode({\"svc_id\": \"${svc_id}\"})",
            "name": "OSD",
            "parameters": [
                {
                    "name": "svc_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "OSD",
            "operationId": "serv81OSD0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R81A0Bf4fe201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R81A0Bestt202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R81A0Bdy2y400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R81A0Bb699401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R81A0Beeun403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R81A0Brfi6500",
                    "headers": []
                }
            ]
        },
        {
            "index": "82",
            "path": "/api/osd/${svc_id}/devices",
            "serviceName": "serv82OSD0",
            "method": "fetch",
            "summary": "",
            "desc": "OSD management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? svc_id",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "OSD",
            "parameters": [
                {
                    "name": "svc_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "OSD",
            "operationId": "serv82OSD0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R82A0B230d200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R82A0Bo7me400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R82A0B3vd5401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R82A0Bvqqc403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R82A0Bfgns500",
                    "headers": []
                }
            ]
        },
        {
            "index": "83",
            "path": "/api/osd/${svc_id}/histogram",
            "serviceName": "serv83OSD0",
            "method": "fetch",
            "summary": "",
            "desc": "OSD management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? svc_id",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "OSD",
            "parameters": [
                {
                    "name": "svc_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "OSD",
            "operationId": "serv83OSD0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R83A0Bkrxm200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R83A0B9i8z400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R83A0B5gcp401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R83A0Bv2rn403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R83A0Bai9b500",
                    "headers": []
                }
            ]
        },
        {
            "index": "84",
            "path": "/api/osd/${svc_id}/mark",
            "serviceName": "serv84OSD0",
            "method": "update",
            "summary": "Mark OSD flags (out, in, down, lost, ...)",
            "desc": "OSD management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? svc_id",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "svc_id",
            "jsonParam": ", json.encode({\"svc_id\": \"${svc_id}\"})",
            "name": "OSD",
            "parameters": [
                {
                    "name": "svc_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "description": "SVC ID",
                    "required": true
                }
            ],
            "tag": "OSD",
            "operationId": "serv84OSD0",
            "requestBody": {
                "required": [
                    "action"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "action",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R84A0Bl69o200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R84A0B56qs202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R84A0Bzhgl400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R84A0Bp1em401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R84A0B5o2n403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R84A0Bt1wm500",
                    "headers": []
                }
            ]
        },
        {
            "index": "85",
            "path": "/api/osd/${svc_id}/purge",
            "serviceName": "serv85OSD0",
            "method": "post",
            "summary": "",
            "desc": "OSD management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? svc_id",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "svc_id",
            "jsonParam": ", json.encode({\"svc_id\": \"${svc_id}\"})",
            "name": "OSD",
            "parameters": [
                {
                    "name": "svc_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "OSD",
            "operationId": "serv85OSD0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R85A0Buxzd201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R85A0B09nu202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R85A0B96ix400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R85A0Bd25g401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R85A0Bvkjj403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R85A0Bxvra500",
                    "headers": []
                }
            ]
        },
        {
            "index": "86",
            "path": "/api/osd/${svc_id}/reweight",
            "serviceName": "serv86OSD0",
            "method": "post",
            "summary": "",
            "desc": "OSD management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? svc_id",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "svc_id",
            "jsonParam": ", json.encode({\"svc_id\": \"${svc_id}\"})",
            "name": "OSD",
            "parameters": [
                {
                    "name": "svc_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "OSD",
            "operationId": "serv86OSD0",
            "requestBody": {
                "required": [
                    "weight"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "weight",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R86A0Bt3u4201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R86A0Bdhhu202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R86A0B2qns400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R86A0B1b1w401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R86A0B58u9403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R86A0Baikn500",
                    "headers": []
                }
            ]
        },
        {
            "index": "87",
            "path": "/api/osd/${svc_id}/scrub",
            "serviceName": "serv87OSD0",
            "method": "post",
            "summary": "",
            "desc": "OSD management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? svc_id, String? deep",
            "query": "?deep=$deep",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "svc_id, deep",
            "jsonParam": ", json.encode({\"svc_id\": \"${svc_id}\", \"deep\": \"${deep}\"})",
            "name": "OSD",
            "parameters": [
                {
                    "name": "svc_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "deep",
                    "in": "query",
                    "schema": {
                        "type": "boolean"
                    },
                    "default": false
                }
            ],
            "tag": "OSD",
            "operationId": "serv87OSD0",
            "requestBody": {
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "deep",
                        "type": "boolean",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R87A0Bf047201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R87A0Brpjn202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R87A0B1obh400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R87A0B4iby401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R87A0B30kr403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R87A0B6gwj500",
                    "headers": []
                }
            ]
        },
        {
            "index": "88",
            "path": "/api/osd/${svc_id}/smart",
            "serviceName": "serv88OSD0",
            "method": "fetch",
            "summary": "",
            "desc": "OSD management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? svc_id",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "OSD",
            "parameters": [
                {
                    "name": "svc_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "OSD",
            "operationId": "serv88OSD0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R88A0Bzl5v200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R88A0B7zpa400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R88A0B05uc401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R88A0Bwm2d403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R88A0Bzs3r500",
                    "headers": []
                }
            ]
        },
        {
            "index": "89",
            "path": "/api/perf_counters",
            "serviceName": "serv89PerfCounters0",
            "method": "fetch",
            "summary": "Display Perf Counters",
            "desc": "Perf Counters Management API",
            "responseType": "R89A0B0qbo200",
            "hasResponse": true,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "PerfCounters",
            "parameters": [],
            "tag": "PerfCounters",
            "operationId": "serv89PerfCounters0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "mon.a"
                    ],
                    "name": "R89A0B0qbo200",
                    "properties": [
                        {
                            "name": "mon.a",
                            "type": "object",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Service ID"
                        }
                    ],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R89A0B5wor400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R89A0B5876401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R89A0Bf5i9403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R89A0Bbyoi500",
                    "headers": []
                }
            ]
        },
        {
            "index": "90",
            "path": "/api/perf_counters/mds/${service_id}",
            "serviceName": "serv90MdsPerfCounter0",
            "method": "fetch",
            "summary": "",
            "desc": "Mds Perf Counters Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? service_id",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "MdsPerfCounter",
            "parameters": [
                {
                    "name": "service_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "MdsPerfCounter",
            "operationId": "serv90MdsPerfCounter0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R90A0Bpmdq200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R90A0B97t9400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R90A0Bfzcb401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R90A0B33nv403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R90A0Bbl3g500",
                    "headers": []
                }
            ]
        },
        {
            "index": "91",
            "path": "/api/perf_counters/mgr/${service_id}",
            "serviceName": "serv91MgrPerfCounter0",
            "method": "fetch",
            "summary": "",
            "desc": "Mgr Perf Counters Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? service_id",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "MgrPerfCounter",
            "parameters": [
                {
                    "name": "service_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "MgrPerfCounter",
            "operationId": "serv91MgrPerfCounter0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R91A0B8y2w200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R91A0Bpcbj400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R91A0Bwax5401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R91A0Bo8ga403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R91A0Bwgj9500",
                    "headers": []
                }
            ]
        },
        {
            "index": "92",
            "path": "/api/perf_counters/mon/${service_id}",
            "serviceName": "serv92MonPerfCounter0",
            "method": "fetch",
            "summary": "",
            "desc": "Mon Perf Counters Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? service_id",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "MonPerfCounter",
            "parameters": [
                {
                    "name": "service_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "MonPerfCounter",
            "operationId": "serv92MonPerfCounter0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R92A0Bim48200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R92A0Be7kz400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R92A0Bx1hh401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R92A0By623403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R92A0Bu6o1500",
                    "headers": []
                }
            ]
        },
        {
            "index": "93",
            "path": "/api/perf_counters/osd/${service_id}",
            "serviceName": "serv93OsdPerfCounter0",
            "method": "fetch",
            "summary": "",
            "desc": "OSD Perf Counters Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? service_id",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "OsdPerfCounter",
            "parameters": [
                {
                    "name": "service_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "OsdPerfCounter",
            "operationId": "serv93OsdPerfCounter0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R93A0Bosod200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R93A0Bs7kc400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R93A0Bv3mm401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R93A0Bo00b403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R93A0Be26d500",
                    "headers": []
                }
            ]
        },
        {
            "index": "94",
            "path": "/api/perf_counters/rbd-mirror/${service_id}",
            "serviceName": "serv94RgwMirrorPerfCounter0",
            "method": "fetch",
            "summary": "",
            "desc": "Rgw Mirroring Perf Counters Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? service_id",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "RgwMirrorPerfCounter",
            "parameters": [
                {
                    "name": "service_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "RgwMirrorPerfCounter",
            "operationId": "serv94RgwMirrorPerfCounter0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R94A0B9m5m200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R94A0Botgl400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R94A0B25b6401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R94A0B9u9f403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R94A0B7tv4500",
                    "headers": []
                }
            ]
        },
        {
            "index": "95",
            "path": "/api/perf_counters/rgw/${service_id}",
            "serviceName": "serv95RgwPerfCounter0",
            "method": "fetch",
            "summary": "",
            "desc": "Rgw Perf Counters Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? service_id",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "RgwPerfCounter",
            "parameters": [
                {
                    "name": "service_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "RgwPerfCounter",
            "operationId": "serv95RgwPerfCounter0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R95A0Btqwn200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R95A0Bnymc400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R95A0B7yah401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R95A0Bkn6r403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R95A0Beqae500",
                    "headers": []
                }
            ]
        },
        {
            "index": "96",
            "path": "/api/perf_counters/tcmu-runner/${service_id}",
            "serviceName": "serv96TcmuRunnerPerfCounter0",
            "method": "fetch",
            "summary": "",
            "desc": "Tcmu Runner Perf Counters Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? service_id",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "TcmuRunnerPerfCounter",
            "parameters": [
                {
                    "name": "service_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "TcmuRunnerPerfCounter",
            "operationId": "serv96TcmuRunnerPerfCounter0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R96A0B2son200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R96A0Bkx6r400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R96A0Bbgin401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R96A0Bvqjv403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R96A0Brsy9500",
                    "headers": []
                }
            ]
        },
        {
            "index": "97",
            "path": "/api/pool",
            "serviceName": "serv97Pool0",
            "method": "fetch",
            "summary": "Display Pool List",
            "desc": "Get pool details by pool name",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? attrs, String? stats",
            "query": "?attrs=$attrs%26stats=$stats",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Pool",
            "parameters": [
                {
                    "name": "attrs",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Pool Attributes",
                    "allowEmptyValue": true
                },
                {
                    "name": "stats",
                    "in": "query",
                    "schema": {
                        "type": "boolean"
                    },
                    "description": "Pool Stats",
                    "default": false
                }
            ],
            "tag": "Pool",
            "operationId": "serv97Pool0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "pool",
                        "pool_name",
                        "flags",
                        "flags_names",
                        "type",
                        "size",
                        "min_size",
                        "crush_rule",
                        "object_hash",
                        "pg_autoscale_mode",
                        "pg_num",
                        "pg_placement_num",
                        "pg_placement_num_target",
                        "pg_num_target",
                        "pg_num_pending",
                        "last_pg_merge_meta",
                        "auid",
                        "snap_mode",
                        "snap_seq",
                        "snap_epoch",
                        "pool_snaps",
                        "quota_max_bytes",
                        "quota_max_objects",
                        "tiers",
                        "tier_of",
                        "read_tier",
                        "write_tier",
                        "cache_mode",
                        "target_max_bytes",
                        "target_max_objects",
                        "cache_target_dirty_ratio_micro",
                        "cache_target_dirty_high_ratio_micro",
                        "cache_target_full_ratio_micro",
                        "cache_min_flush_age",
                        "cache_min_evict_age",
                        "erasure_code_profile",
                        "hit_set_params",
                        "hit_set_period",
                        "hit_set_count",
                        "use_gmt_hitset",
                        "min_read_recency_for_promote",
                        "min_write_recency_for_promote",
                        "hit_set_grade_decay_rate",
                        "hit_set_search_last_n",
                        "grade_table",
                        "stripe_width",
                        "expected_num_objects",
                        "fast_read",
                        "options",
                        "application_metadata",
                        "create_time",
                        "last_change",
                        "last_force_op_resend",
                        "last_force_op_resend_prenautilus",
                        "last_force_op_resend_preluminous",
                        "removed_snaps"
                    ],
                    "name": "R97A0Bpnd6200",
                    "properties": [],
                    "object": {
                        "type": "object",
                        "name": "R97A0Bpnd6200I",
                        "properties": [
                            {
                                "name": "pool",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "pool id"
                            },
                            {
                                "name": "pool_name",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "pool name"
                            },
                            {
                                "name": "flags",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "flags_names",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "flags name"
                            },
                            {
                                "name": "type",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "type of pool"
                            },
                            {
                                "name": "size",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "pool size"
                            },
                            {
                                "name": "min_size",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "crush_rule",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "object_hash",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "pg_autoscale_mode",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "pg_num",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "pg_placement_num",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "pg_placement_num_target",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "pg_num_target",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "pg_num_pending",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "last_pg_merge_meta",
                                "type": "object",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "auid",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "snap_mode",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "snap_seq",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "snap_epoch",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "pool_snaps",
                                "type": "array",
                                "typeItems": "string",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "quota_max_bytes",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "quota_max_objects",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "tiers",
                                "type": "array",
                                "typeItems": "string",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "tier_of",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "read_tier",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "write_tier",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "cache_mode",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "target_max_bytes",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "target_max_objects",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "cache_target_dirty_ratio_micro",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "cache_target_dirty_high_ratio_micro",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "cache_target_full_ratio_micro",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "cache_min_flush_age",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "cache_min_evict_age",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "erasure_code_profile",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "hit_set_params",
                                "type": "object",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "hit_set_period",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "hit_set_count",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "use_gmt_hitset",
                                "type": "boolean",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "min_read_recency_for_promote",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "min_write_recency_for_promote",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "hit_set_grade_decay_rate",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "hit_set_search_last_n",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "grade_table",
                                "type": "array",
                                "typeItems": "string",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "stripe_width",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "expected_num_objects",
                                "type": "integer",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "fast_read",
                                "type": "boolean",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "options",
                                "type": "object",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "application_metadata",
                                "type": "array",
                                "typeItems": "string",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "create_time",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "last_change",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "last_force_op_resend",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "last_force_op_resend_prenautilus",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "last_force_op_resend_preluminous",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "removed_snaps",
                                "type": "array",
                                "typeItems": "string",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            }
                        ]
                    },
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R97A0B34f6400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R97A0Bu7hm401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R97A0B8eif403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R97A0Bn2b7500",
                    "headers": []
                }
            ]
        },
        {
            "index": "97",
            "path": "/api/pool",
            "serviceName": "serv97Pool1",
            "method": "post",
            "summary": "",
            "desc": "Get pool details by pool name",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "Pool",
            "parameters": [],
            "tag": "Pool",
            "operationId": "serv97Pool1",
            "requestBody": {
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "pool",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R97A1Bb8ff201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R97A1B2v9k202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R97A1Btt7i400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R97A1Buyjf401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R97A1Btkeh403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R97A1Bc6gt500",
                    "headers": []
                }
            ]
        },
        {
            "index": "98",
            "path": "/api/pool/${pool_name}",
            "serviceName": "serv98Pool0",
            "method": "fetch",
            "summary": "",
            "desc": "Get pool details by pool name",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? pool_name, String? attrs, String? stats",
            "query": "?attrs=$attrs%26stats=$stats",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Pool",
            "parameters": [
                {
                    "name": "pool_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "attrs",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "allowEmptyValue": true
                },
                {
                    "name": "stats",
                    "in": "query",
                    "schema": {
                        "type": "boolean"
                    },
                    "default": false
                }
            ],
            "tag": "Pool",
            "operationId": "serv98Pool0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R98A0B98nr200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R98A0B1p3b400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R98A0B5jtg401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R98A0By7um403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R98A0Bk628500",
                    "headers": []
                }
            ]
        },
        {
            "index": "98",
            "path": "/api/pool/${pool_name}",
            "serviceName": "serv98Pool1",
            "method": "update",
            "summary": "",
            "desc": "Get pool details by pool name",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? pool_name",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "pool_name",
            "jsonParam": ", json.encode({\"pool_name\": \"${pool_name}\"})",
            "name": "Pool",
            "parameters": [
                {
                    "name": "pool_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Pool",
            "operationId": "serv98Pool1",
            "requestBody": {
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "flags",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "application_metadata",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "configuration",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R98A1Ba6x5200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R98A1B0zp7202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R98A1Bfmrc400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R98A1Bkmdd401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R98A1Bvvxf403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R98A1B8i35500",
                    "headers": []
                }
            ]
        },
        {
            "index": "98",
            "path": "/api/pool/${pool_name}",
            "serviceName": "serv98Pool2",
            "method": "delete",
            "summary": "",
            "desc": "Get pool details by pool name",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? pool_name",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Pool",
            "parameters": [
                {
                    "name": "pool_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Pool",
            "operationId": "serv98Pool2",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R98A2Bunb6202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "204",
                    "description": "Resource deleted.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R98A2B7p0k204",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R98A2Bmngf400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R98A2Bxv3g401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R98A2Bc3dc403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R98A2Blifx500",
                    "headers": []
                }
            ]
        },
        {
            "index": "99",
            "path": "/api/pool/${pool_name}/configuration",
            "serviceName": "serv99Pool0",
            "method": "fetch",
            "summary": "",
            "desc": "Get pool details by pool name",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? pool_name",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Pool",
            "parameters": [
                {
                    "name": "pool_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Pool",
            "operationId": "serv99Pool0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R99A0B5as8200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R99A0Bevwh400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R99A0B4z9q401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R99A0B4ksn403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R99A0Bwx6b500",
                    "headers": []
                }
            ]
        },
        {
            "index": "100",
            "path": "/api/prometheus",
            "serviceName": "serv100Prometheus0",
            "method": "fetch",
            "summary": "",
            "desc": "Prometheus Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Prometheus",
            "parameters": [],
            "tag": "Prometheus",
            "operationId": "serv100Prometheus0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R100A0B072h200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R100A0Bmxi9400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R100A0Bbfdv401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R100A0B6mkd403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R100A0B4mw8500",
                    "headers": []
                }
            ]
        },
        {
            "index": "101",
            "path": "/api/prometheus/notifications",
            "serviceName": "serv101PrometheusNotifications0",
            "method": "fetch",
            "summary": "",
            "desc": "Prometheus Notifications Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "PrometheusNotifications",
            "parameters": [],
            "tag": "PrometheusNotifications",
            "operationId": "serv101PrometheusNotifications0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R101A0Bxv36200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R101A0Bj85a400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R101A0Bawwu401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R101A0Bd0zq403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R101A0Betht500",
                    "headers": []
                }
            ]
        },
        {
            "index": "102",
            "path": "/api/prometheus/rules",
            "serviceName": "serv102Prometheus0",
            "method": "fetch",
            "summary": "",
            "desc": "Prometheus Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Prometheus",
            "parameters": [],
            "tag": "Prometheus",
            "operationId": "serv102Prometheus0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R102A0Bxft3200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R102A0Bb68x400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R102A0Bonvq401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R102A0Bnk4v403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R102A0Bttm7500",
                    "headers": []
                }
            ]
        },
        {
            "index": "103",
            "path": "/api/prometheus/silence",
            "serviceName": "serv103Prometheus0",
            "method": "post",
            "summary": "",
            "desc": "Prometheus Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "Prometheus",
            "parameters": [],
            "tag": "Prometheus",
            "operationId": "serv103Prometheus0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R103A0Bf5ic201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R103A0Bdysc202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R103A0Bg3tg400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R103A0Bpin8401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R103A0Bbbyp403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R103A0Bdtlj500",
                    "headers": []
                }
            ]
        },
        {
            "index": "104",
            "path": "/api/prometheus/silence/${s_id}",
            "serviceName": "serv104Prometheus0",
            "method": "delete",
            "summary": "",
            "desc": "Prometheus Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? s_id",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Prometheus",
            "parameters": [
                {
                    "name": "s_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Prometheus",
            "operationId": "serv104Prometheus0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R104A0Bxu5s202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "204",
                    "description": "Resource deleted.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R104A0Bnx9e204",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R104A0Bes28400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R104A0By9qq401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R104A0Bvj4j403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R104A0B0twc500",
                    "headers": []
                }
            ]
        },
        {
            "index": "105",
            "path": "/api/prometheus/silences",
            "serviceName": "serv105Prometheus0",
            "method": "fetch",
            "summary": "",
            "desc": "Prometheus Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Prometheus",
            "parameters": [],
            "tag": "Prometheus",
            "operationId": "serv105Prometheus0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R105A0Bg3bx200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R105A0B8k5p400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R105A0Byxhd401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R105A0Bb3lc403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R105A0Baevf500",
                    "headers": []
                }
            ]
        },
        {
            "index": "106",
            "path": "/api/rgw/bucket",
            "serviceName": "serv106RgwBucket0",
            "method": "fetch",
            "summary": "",
            "desc": "RGW Bucket Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? stats, String? daemon_name, String? uid",
            "query": "?stats=$stats%26daemon_name=$daemon_name%26uid=$uid",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "RgwBucket",
            "parameters": [
                {
                    "name": "stats",
                    "in": "query",
                    "schema": {
                        "type": "boolean"
                    },
                    "default": false
                },
                {
                    "name": "daemon_name",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "allowEmptyValue": true
                },
                {
                    "name": "uid",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "allowEmptyValue": true
                }
            ],
            "tag": "RgwBucket",
            "operationId": "serv106RgwBucket0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.1+json",
                    "component": "",
                    "required": [],
                    "name": "R106A0Bc92j200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R106A0Bmc5l400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R106A0Bh4a9401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R106A0Bhzps403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R106A0B7sxx500",
                    "headers": []
                }
            ]
        },
        {
            "index": "106",
            "path": "/api/rgw/bucket",
            "serviceName": "serv106RgwBucket1",
            "method": "post",
            "summary": "",
            "desc": "RGW Bucket Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "RgwBucket",
            "parameters": [],
            "tag": "RgwBucket",
            "operationId": "serv106RgwBucket1",
            "requestBody": {
                "required": [
                    "bucket",
                    "uid"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "bucket",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "uid",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "zonegroup",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "placement_target",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "lock_enabled",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "lock_mode",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "lock_retention_period_days",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "lock_retention_period_years",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "daemon_name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R106A1Bq4hm201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R106A1Bwfh6202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R106A1Bryir400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R106A1Bnrio401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R106A1Brtx9403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R106A1Bi6p8500",
                    "headers": []
                }
            ]
        },
        {
            "index": "107",
            "path": "/api/rgw/bucket/${bucket}",
            "serviceName": "serv107RgwBucket0",
            "method": "fetch",
            "summary": "",
            "desc": "RGW Bucket Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? bucket, String? daemon_name",
            "query": "?daemon_name=$daemon_name",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "RgwBucket",
            "parameters": [
                {
                    "name": "bucket",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "daemon_name",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "allowEmptyValue": true
                }
            ],
            "tag": "RgwBucket",
            "operationId": "serv107RgwBucket0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R107A0Bby66200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R107A0Bhtbb400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R107A0Bc47j401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R107A0B1cem403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R107A0B1nwd500",
                    "headers": []
                }
            ]
        },
        {
            "index": "107",
            "path": "/api/rgw/bucket/${bucket}",
            "serviceName": "serv107RgwBucket1",
            "method": "update",
            "summary": "",
            "desc": "RGW Bucket Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? bucket",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "bucket",
            "jsonParam": ", json.encode({\"bucket\": \"${bucket}\"})",
            "name": "RgwBucket",
            "parameters": [
                {
                    "name": "bucket",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "RgwBucket",
            "operationId": "serv107RgwBucket1",
            "requestBody": {
                "required": [
                    "bucket_id",
                    "uid"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "bucket_id",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "uid",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "versioning_state",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "mfa_delete",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "mfa_token_serial",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "mfa_token_pin",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "lock_mode",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "lock_retention_period_days",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "lock_retention_period_years",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "daemon_name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R107A1Bcmoq200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R107A1Bldo7202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R107A1Bkrxg400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R107A1Bee7h401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R107A1Biytd403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R107A1Bju3q500",
                    "headers": []
                }
            ]
        },
        {
            "index": "107",
            "path": "/api/rgw/bucket/${bucket}",
            "serviceName": "serv107RgwBucket2",
            "method": "delete",
            "summary": "",
            "desc": "RGW Bucket Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? bucket, String? purge_objects, String? daemon_name",
            "query": "?purge_objects=$purge_objects%26daemon_name=$daemon_name",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "RgwBucket",
            "parameters": [
                {
                    "name": "bucket",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "purge_objects",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "default": "true"
                },
                {
                    "name": "daemon_name",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "allowEmptyValue": true
                }
            ],
            "tag": "RgwBucket",
            "operationId": "serv107RgwBucket2",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R107A2Bs0q7202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "204",
                    "description": "Resource deleted.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R107A2Bwiff204",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R107A2Bqftl400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R107A2Blzy3401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R107A2Bhn16403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R107A2Bl1rk500",
                    "headers": []
                }
            ]
        },
        {
            "index": "108",
            "path": "/api/rgw/daemon",
            "serviceName": "serv108RgwDaemon0",
            "method": "fetch",
            "summary": "Display RGW Daemons",
            "desc": "RGW Daemon Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "RgwDaemon",
            "parameters": [],
            "tag": "RgwDaemon",
            "operationId": "serv108RgwDaemon0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "id",
                        "version",
                        "server_hostname",
                        "zonegroup_name",
                        "zone_name"
                    ],
                    "name": "R108A0B536n200",
                    "properties": [],
                    "object": {
                        "type": "object",
                        "name": "R108A0B536n200I",
                        "properties": [
                            {
                                "name": "id",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Daemon ID"
                            },
                            {
                                "name": "version",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Ceph Version"
                            },
                            {
                                "name": "server_hostname",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "zonegroup_name",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Zone Group"
                            },
                            {
                                "name": "zone_name",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Zone"
                            }
                        ]
                    },
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R108A0Bs131400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R108A0Bncvb401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R108A0Br7tu403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R108A0B4b72500",
                    "headers": []
                }
            ]
        },
        {
            "index": "109",
            "path": "/api/rgw/daemon/${svc_id}",
            "serviceName": "serv109RgwDaemon0",
            "method": "fetch",
            "summary": "",
            "desc": "RGW Daemon Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? svc_id",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "RgwDaemon",
            "parameters": [
                {
                    "name": "svc_id",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "RgwDaemon",
            "operationId": "serv109RgwDaemon0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R109A0Bw9wp200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R109A0B7elt400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R109A0Bhd6j401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R109A0Bclrk403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R109A0Bzcmd500",
                    "headers": []
                }
            ]
        },
        {
            "index": "110",
            "path": "/api/rgw/site",
            "serviceName": "serv110RgwSite0",
            "method": "fetch",
            "summary": "",
            "desc": "RGW Site Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? query, String? daemon_name",
            "query": "?query=$query%26daemon_name=$daemon_name",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "RgwSite",
            "parameters": [
                {
                    "name": "query",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "allowEmptyValue": true
                },
                {
                    "name": "daemon_name",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "allowEmptyValue": true
                }
            ],
            "tag": "RgwSite",
            "operationId": "serv110RgwSite0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R110A0B29eq200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R110A0Bfz7c400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R110A0Byep6401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R110A0B4ztl403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R110A0Bbtlg500",
                    "headers": []
                }
            ]
        },
        {
            "index": "111",
            "path": "/api/rgw/user",
            "serviceName": "serv111RgwUser0",
            "method": "fetch",
            "summary": "Display RGW Users",
            "desc": "RGW User Management API",
            "responseType": "R111A0Bzugi200",
            "hasResponse": true,
            "parametersString": "String? daemon_name",
            "query": "?daemon_name=$daemon_name",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "RgwUser",
            "parameters": [
                {
                    "name": "daemon_name",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "allowEmptyValue": true
                }
            ],
            "tag": "RgwUser",
            "operationId": "serv111RgwUser0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "list_of_users"
                    ],
                    "name": "R111A0Bzugi200",
                    "properties": [
                        {
                            "name": "list_of_users",
                            "type": "array",
                            "typeItems": "string",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "list of rgw users"
                        }
                    ],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R111A0B2gbn400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R111A0Btn39401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R111A0Biver403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R111A0Bqghl500",
                    "headers": []
                }
            ]
        },
        {
            "index": "111",
            "path": "/api/rgw/user",
            "serviceName": "serv111RgwUser1",
            "method": "post",
            "summary": "",
            "desc": "RGW User Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "RgwUser",
            "parameters": [],
            "tag": "RgwUser",
            "operationId": "serv111RgwUser1",
            "requestBody": {
                "required": [
                    "uid",
                    "display_name"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "uid",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "display_name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "email",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "max_buckets",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "suspended",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "generate_key",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "access_key",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "secret_key",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "daemon_name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R111A1Bxxmh201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R111A1B49sg202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R111A1Becmi400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R111A1Bedic401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R111A1B3qzg403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R111A1By5ad500",
                    "headers": []
                }
            ]
        },
        {
            "index": "112",
            "path": "/api/rgw/user/get_emails",
            "serviceName": "serv112RgwUser0",
            "method": "fetch",
            "summary": "",
            "desc": "RGW User Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? daemon_name",
            "query": "?daemon_name=$daemon_name",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "RgwUser",
            "parameters": [
                {
                    "name": "daemon_name",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "allowEmptyValue": true
                }
            ],
            "tag": "RgwUser",
            "operationId": "serv112RgwUser0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R112A0Bygv8200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R112A0Bgdqg400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R112A0Bbisg401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R112A0Bv0s5403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R112A0Bfyy4500",
                    "headers": []
                }
            ]
        },
        {
            "index": "113",
            "path": "/api/rgw/user/${uid}",
            "serviceName": "serv113RgwUser0",
            "method": "fetch",
            "summary": "",
            "desc": "RGW User Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? uid, String? daemon_name, String? stats",
            "query": "?daemon_name=$daemon_name%26stats=$stats",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "RgwUser",
            "parameters": [
                {
                    "name": "uid",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "daemon_name",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "allowEmptyValue": true
                },
                {
                    "name": "stats",
                    "in": "query",
                    "schema": {
                        "type": "boolean"
                    },
                    "default": true
                }
            ],
            "tag": "RgwUser",
            "operationId": "serv113RgwUser0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R113A0Bznw4200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R113A0Bke7h400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R113A0Bcmlo401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R113A0B9wko403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R113A0Brzud500",
                    "headers": []
                }
            ]
        },
        {
            "index": "113",
            "path": "/api/rgw/user/${uid}",
            "serviceName": "serv113RgwUser1",
            "method": "update",
            "summary": "",
            "desc": "RGW User Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? uid",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "uid",
            "jsonParam": ", json.encode({\"uid\": \"${uid}\"})",
            "name": "RgwUser",
            "parameters": [
                {
                    "name": "uid",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "RgwUser",
            "operationId": "serv113RgwUser1",
            "requestBody": {
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "display_name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "email",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "max_buckets",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "suspended",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "daemon_name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R113A1Bb9if200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R113A1Bbhft202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R113A1Bxx4l400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R113A1Boh1h401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R113A1Bg5re403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R113A1B33wo500",
                    "headers": []
                }
            ]
        },
        {
            "index": "113",
            "path": "/api/rgw/user/${uid}",
            "serviceName": "serv113RgwUser2",
            "method": "delete",
            "summary": "",
            "desc": "RGW User Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? uid, String? daemon_name",
            "query": "?daemon_name=$daemon_name",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "RgwUser",
            "parameters": [
                {
                    "name": "uid",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "daemon_name",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "allowEmptyValue": true
                }
            ],
            "tag": "RgwUser",
            "operationId": "serv113RgwUser2",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R113A2Boamb202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "204",
                    "description": "Resource deleted.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R113A2Bdt5j204",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R113A2Bk1nl400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R113A2Bat9c401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R113A2Bb8ta403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R113A2Bg64w500",
                    "headers": []
                }
            ]
        },
        {
            "index": "114",
            "path": "/api/rgw/user/${uid}/capability",
            "serviceName": "serv114RgwUser0",
            "method": "post",
            "summary": "",
            "desc": "RGW User Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? uid",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "uid",
            "jsonParam": ", json.encode({\"uid\": \"${uid}\"})",
            "name": "RgwUser",
            "parameters": [
                {
                    "name": "uid",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "RgwUser",
            "operationId": "serv114RgwUser0",
            "requestBody": {
                "required": [
                    "type",
                    "perm"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "type",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "perm",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "daemon_name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R114A0B2d0i201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R114A0Bk5le202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R114A0Bc911400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R114A0Brwb7401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R114A0Be0nv403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R114A0B9coh500",
                    "headers": []
                }
            ]
        },
        {
            "index": "114",
            "path": "/api/rgw/user/${uid}/capability",
            "serviceName": "serv114RgwUser1",
            "method": "delete",
            "summary": "",
            "desc": "RGW User Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? uid, String? type, String? perm, String? daemon_name",
            "query": "?type=$type%26perm=$perm%26daemon_name=$daemon_name",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "RgwUser",
            "parameters": [
                {
                    "name": "uid",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "type",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "perm",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "daemon_name",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "allowEmptyValue": true
                }
            ],
            "tag": "RgwUser",
            "operationId": "serv114RgwUser1",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R114A1Bnzbo202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "204",
                    "description": "Resource deleted.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R114A1Bk2hl204",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R114A1Brhnb400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R114A1B5qni401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R114A1Bf65m403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R114A1Bv99t500",
                    "headers": []
                }
            ]
        },
        {
            "index": "115",
            "path": "/api/rgw/user/${uid}/key",
            "serviceName": "serv115RgwUser0",
            "method": "post",
            "summary": "",
            "desc": "RGW User Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? uid",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "uid",
            "jsonParam": ", json.encode({\"uid\": \"${uid}\"})",
            "name": "RgwUser",
            "parameters": [
                {
                    "name": "uid",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "RgwUser",
            "operationId": "serv115RgwUser0",
            "requestBody": {
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "key_type",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "subuser",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "generate_key",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "access_key",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "secret_key",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "daemon_name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R115A0B69xf201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R115A0Bhlmi202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R115A0Bzlew400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R115A0B7eb9401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R115A0B7pup403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R115A0Bq335500",
                    "headers": []
                }
            ]
        },
        {
            "index": "115",
            "path": "/api/rgw/user/${uid}/key",
            "serviceName": "serv115RgwUser1",
            "method": "delete",
            "summary": "",
            "desc": "RGW User Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? uid, String? key_type, String? subuser, String? access_key, String? daemon_name",
            "query": "?key_type=$key_type%26subuser=$subuser%26access_key=$access_key%26daemon_name=$daemon_name",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "RgwUser",
            "parameters": [
                {
                    "name": "uid",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "key_type",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "default": "s3"
                },
                {
                    "name": "subuser",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "allowEmptyValue": true
                },
                {
                    "name": "access_key",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "allowEmptyValue": true
                },
                {
                    "name": "daemon_name",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "allowEmptyValue": true
                }
            ],
            "tag": "RgwUser",
            "operationId": "serv115RgwUser1",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R115A1Bqxsn202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "204",
                    "description": "Resource deleted.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R115A1B6fhk204",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R115A1Bzbzp400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R115A1Byjiq401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R115A1Bajb6403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R115A1Badax500",
                    "headers": []
                }
            ]
        },
        {
            "index": "116",
            "path": "/api/rgw/user/${uid}/quota",
            "serviceName": "serv116RgwUser0",
            "method": "fetch",
            "summary": "",
            "desc": "RGW User Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? uid, String? daemon_name",
            "query": "?daemon_name=$daemon_name",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "RgwUser",
            "parameters": [
                {
                    "name": "uid",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "daemon_name",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "allowEmptyValue": true
                }
            ],
            "tag": "RgwUser",
            "operationId": "serv116RgwUser0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R116A0Bgs1l200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R116A0Bl0ab400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R116A0Bgb6r401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R116A0B6ap7403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R116A0Bqnui500",
                    "headers": []
                }
            ]
        },
        {
            "index": "116",
            "path": "/api/rgw/user/${uid}/quota",
            "serviceName": "serv116RgwUser1",
            "method": "update",
            "summary": "",
            "desc": "RGW User Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? uid",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "uid",
            "jsonParam": ", json.encode({\"uid\": \"${uid}\"})",
            "name": "RgwUser",
            "parameters": [
                {
                    "name": "uid",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "RgwUser",
            "operationId": "serv116RgwUser1",
            "requestBody": {
                "required": [
                    "quota_type",
                    "enabled",
                    "max_size_kb",
                    "max_objects"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "quota_type",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "enabled",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "max_size_kb",
                        "type": "integer",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "max_objects",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "daemon_name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R116A1Bzmt9200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R116A1B4koo202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R116A1Bzdck400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R116A1B22yk401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R116A1Bzrfj403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R116A1B036d500",
                    "headers": []
                }
            ]
        },
        {
            "index": "117",
            "path": "/api/rgw/user/${uid}/subuser",
            "serviceName": "serv117RgwUser0",
            "method": "post",
            "summary": "",
            "desc": "RGW User Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? uid",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "uid",
            "jsonParam": ", json.encode({\"uid\": \"${uid}\"})",
            "name": "RgwUser",
            "parameters": [
                {
                    "name": "uid",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "RgwUser",
            "operationId": "serv117RgwUser0",
            "requestBody": {
                "required": [
                    "subuser",
                    "access"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "subuser",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "access",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "key_type",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "generate_secret",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "access_key",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "secret_key",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "daemon_name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R117A0B45jl201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R117A0B8o3o202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R117A0Bqa35400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R117A0Bwnwq401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R117A0B2ebz403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R117A0Bi3on500",
                    "headers": []
                }
            ]
        },
        {
            "index": "118",
            "path": "/api/rgw/user/${uid}/subuser/${subuser}",
            "serviceName": "serv118RgwUser0",
            "method": "delete",
            "summary": "",
            "desc": "RGW User Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? uid, String? subuser, String? purge_keys, String? daemon_name",
            "query": "?purge_keys=$purge_keys%26daemon_name=$daemon_name",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "RgwUser",
            "parameters": [
                {
                    "name": "uid",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "subuser",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                },
                {
                    "name": "purge_keys",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "default": "true"
                },
                {
                    "name": "daemon_name",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "allowEmptyValue": true
                }
            ],
            "tag": "RgwUser",
            "operationId": "serv118RgwUser0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R118A0Beqge202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "204",
                    "description": "Resource deleted.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R118A0B4sqp204",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R118A0Basu7400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R118A0Bxq86401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R118A0Bqbnh403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R118A0Bqxqc500",
                    "headers": []
                }
            ]
        },
        {
            "index": "119",
            "path": "/api/role",
            "serviceName": "serv119Role0",
            "method": "fetch",
            "summary": "Display Role list",
            "desc": "Role Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Role",
            "parameters": [],
            "tag": "Role",
            "operationId": "serv119Role0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "name",
                        "description",
                        "scopes_permissions",
                        "system"
                    ],
                    "name": "R119A0Bz63j200",
                    "properties": [],
                    "object": {
                        "type": "object",
                        "name": "R119A0Bz63j200I",
                        "properties": [
                            {
                                "name": "name",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Role Name"
                            },
                            {
                                "name": "description",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Role Descriptions"
                            },
                            {
                                "name": "scopes_permissions",
                                "type": "object",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "system",
                                "type": "boolean",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": ""
                            }
                        ]
                    },
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R119A0B1uzo400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R119A0Bw3gw401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R119A0Bztl7403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R119A0Bdqf9500",
                    "headers": []
                }
            ]
        },
        {
            "index": "119",
            "path": "/api/role",
            "serviceName": "serv119Role1",
            "method": "post",
            "summary": "",
            "desc": "Role Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "Role",
            "parameters": [],
            "tag": "Role",
            "operationId": "serv119Role1",
            "requestBody": {
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "description",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "scopes_permissions",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R119A1Blx8h201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R119A1Bo3cs202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R119A1B05ky400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R119A1B14fy401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R119A1Bbbyx403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R119A1Bkxbu500",
                    "headers": []
                }
            ]
        },
        {
            "index": "120",
            "path": "/api/role/${name}",
            "serviceName": "serv120Role0",
            "method": "fetch",
            "summary": "",
            "desc": "Role Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? name",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Role",
            "parameters": [
                {
                    "name": "name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Role",
            "operationId": "serv120Role0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R120A0B6g8e200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R120A0Brqbd400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R120A0Bfpzy401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R120A0Beemb403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R120A0B8g0g500",
                    "headers": []
                }
            ]
        },
        {
            "index": "120",
            "path": "/api/role/${name}",
            "serviceName": "serv120Role1",
            "method": "update",
            "summary": "",
            "desc": "Role Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? name",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "name",
            "jsonParam": ", json.encode({\"name\": \"${name}\"})",
            "name": "Role",
            "parameters": [
                {
                    "name": "name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Role",
            "operationId": "serv120Role1",
            "requestBody": {
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "description",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "scopes_permissions",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R120A1Betld200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R120A1Byblp202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R120A1B6aio400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R120A1B26bn401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R120A1Ba2nl403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R120A1Bcvz2500",
                    "headers": []
                }
            ]
        },
        {
            "index": "120",
            "path": "/api/role/${name}",
            "serviceName": "serv120Role2",
            "method": "delete",
            "summary": "",
            "desc": "Role Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? name",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Role",
            "parameters": [
                {
                    "name": "name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Role",
            "operationId": "serv120Role2",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R120A2Bfe3l202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "204",
                    "description": "Resource deleted.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R120A2Becpv204",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R120A2Bvi2k400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R120A2Bz4hk401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R120A2Bevb5403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R120A2Btjui500",
                    "headers": []
                }
            ]
        },
        {
            "index": "121",
            "path": "/api/role/${name}/clone",
            "serviceName": "serv121Role0",
            "method": "post",
            "summary": "",
            "desc": "Role Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? name",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "name",
            "jsonParam": ", json.encode({\"name\": \"${name}\"})",
            "name": "Role",
            "parameters": [
                {
                    "name": "name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Role",
            "operationId": "serv121Role0",
            "requestBody": {
                "required": [
                    "new_name"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "new_name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R121A0B88p3201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R121A0Bnkcc202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R121A0B5e7e400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R121A0B6kjl401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R121A0B0x1i403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R121A0B881u500",
                    "headers": []
                }
            ]
        },
        {
            "index": "122",
            "path": "/api/service",
            "serviceName": "serv122Service0",
            "method": "fetch",
            "summary": "",
            "desc": "Service Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? service_name",
            "query": "?service_name=$service_name",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Service",
            "parameters": [
                {
                    "name": "service_name",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "allowEmptyValue": true
                }
            ],
            "tag": "Service",
            "operationId": "serv122Service0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R122A0Bbqge200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R122A0Biw5r400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R122A0Bmklz401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R122A0B0lk8403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R122A0B4zy4500",
                    "headers": []
                }
            ]
        },
        {
            "index": "122",
            "path": "/api/service",
            "serviceName": "serv122Service1",
            "method": "post",
            "summary": "",
            "desc": "Service Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "Service",
            "parameters": [],
            "tag": "Service",
            "operationId": "serv122Service1",
            "requestBody": {
                "required": [
                    "service_spec",
                    "service_name"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "service_spec",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "service_name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R122A1Bqc6s201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R122A1Brcn1202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R122A1B7mh6400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R122A1B08nd401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R122A1Blq29403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R122A1Bci34500",
                    "headers": []
                }
            ]
        },
        {
            "index": "123",
            "path": "/api/service/known_types",
            "serviceName": "serv123Service0",
            "method": "fetch",
            "summary": "",
            "desc": "Service Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Service",
            "parameters": [],
            "tag": "Service",
            "operationId": "serv123Service0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R123A0Bjffg200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R123A0Bw9rn400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R123A0Bmtjf401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R123A0B03cd403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R123A0B9eut500",
                    "headers": []
                }
            ]
        },
        {
            "index": "124",
            "path": "/api/service/${service_name}",
            "serviceName": "serv124Service0",
            "method": "fetch",
            "summary": "",
            "desc": "Service Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? service_name",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Service",
            "parameters": [
                {
                    "name": "service_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Service",
            "operationId": "serv124Service0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R124A0Bijx9200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R124A0B1raa400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R124A0Bcl21401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R124A0Bipvn403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R124A0Balqb500",
                    "headers": []
                }
            ]
        },
        {
            "index": "124",
            "path": "/api/service/${service_name}",
            "serviceName": "serv124Service1",
            "method": "update",
            "summary": "",
            "desc": "Service Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? service_name",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "service_name",
            "jsonParam": ", json.encode({\"service_name\": \"${service_name}\"})",
            "name": "Service",
            "parameters": [
                {
                    "name": "service_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Service",
            "operationId": "serv124Service1",
            "requestBody": {
                "required": [
                    "service_spec"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "service_spec",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R124A1Byj9a200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R124A1Bcaub202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R124A1B5xtz400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R124A1B3did401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R124A1B3n4g403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R124A1Bjobj500",
                    "headers": []
                }
            ]
        },
        {
            "index": "124",
            "path": "/api/service/${service_name}",
            "serviceName": "serv124Service2",
            "method": "delete",
            "summary": "",
            "desc": "Service Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? service_name",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Service",
            "parameters": [
                {
                    "name": "service_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Service",
            "operationId": "serv124Service2",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R124A2Bbmbp202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "204",
                    "description": "Resource deleted.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R124A2B9ipp204",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R124A2Bvw1f400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R124A2Bf6gp401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R124A2Bulhg403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R124A2B2bra500",
                    "headers": []
                }
            ]
        },
        {
            "index": "125",
            "path": "/api/service/${service_name}/daemons",
            "serviceName": "serv125Service0",
            "method": "fetch",
            "summary": "",
            "desc": "Service Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? service_name",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Service",
            "parameters": [
                {
                    "name": "service_name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Service",
            "operationId": "serv125Service0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R125A0Bom2h200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R125A0B9nlg400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R125A0Bkxj8401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R125A0Bgnh9403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R125A0B16cl500",
                    "headers": []
                }
            ]
        },
        {
            "index": "126",
            "path": "/api/settings",
            "serviceName": "serv126Settings0",
            "method": "fetch",
            "summary": "Display Settings Information",
            "desc": "Settings Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? names",
            "query": "?names=$names",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Settings",
            "parameters": [
                {
                    "name": "names",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Name of Settings",
                    "allowEmptyValue": true
                }
            ],
            "tag": "Settings",
            "operationId": "serv126Settings0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "name",
                        "default",
                        "type",
                        "value"
                    ],
                    "name": "R126A0Bndjb200",
                    "properties": [],
                    "object": {
                        "type": "object",
                        "name": "R126A0Bndjb200I",
                        "properties": [
                            {
                                "name": "name",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Settings Name"
                            },
                            {
                                "name": "default",
                                "type": "boolean",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Default Settings"
                            },
                            {
                                "name": "type",
                                "type": "string",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Type of Settings"
                            },
                            {
                                "name": "value",
                                "type": "boolean",
                                "typeItems": "",
                                "enum": "",
                                "format": "",
                                "isEnum": false,
                                "example": "",
                                "required": false,
                                "description": "Settings Value"
                            }
                        ]
                    },
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R126A0Brvtj400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R126A0B6aso401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R126A0Bz1r6403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R126A0B88ph500",
                    "headers": []
                }
            ]
        },
        {
            "index": "126",
            "path": "/api/settings",
            "serviceName": "serv126Settings1",
            "method": "update",
            "summary": "",
            "desc": "Settings Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "Settings",
            "parameters": [],
            "tag": "Settings",
            "operationId": "serv126Settings1",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R126A1Bbluy200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R126A1Bxb58202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R126A1Bsk7x400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R126A1Bl8lk401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R126A1B7d25403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R126A1Bjwjq500",
                    "headers": []
                }
            ]
        },
        {
            "index": "127",
            "path": "/api/settings/${name}",
            "serviceName": "serv127Settings0",
            "method": "fetch",
            "summary": "",
            "desc": "Settings Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? name",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Settings",
            "parameters": [
                {
                    "name": "name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Settings",
            "operationId": "serv127Settings0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R127A0B9o05200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R127A0Bp5jd400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R127A0B9ut5401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R127A0Bypxs403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R127A0Bkobt500",
                    "headers": []
                }
            ]
        },
        {
            "index": "127",
            "path": "/api/settings/${name}",
            "serviceName": "serv127Settings1",
            "method": "update",
            "summary": "",
            "desc": "Settings Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? name",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "name",
            "jsonParam": ", json.encode({\"name\": \"${name}\"})",
            "name": "Settings",
            "parameters": [
                {
                    "name": "name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Settings",
            "operationId": "serv127Settings1",
            "requestBody": {
                "required": [
                    "value"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "value",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R127A1Ba2is200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R127A1Brkic202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R127A1Bjjun400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R127A1Brddl401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R127A1B33vy403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R127A1Bydkc500",
                    "headers": []
                }
            ]
        },
        {
            "index": "127",
            "path": "/api/settings/${name}",
            "serviceName": "serv127Settings2",
            "method": "delete",
            "summary": "",
            "desc": "Settings Management API",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? name",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Settings",
            "parameters": [
                {
                    "name": "name",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "Settings",
            "operationId": "serv127Settings2",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R127A2Bwvjr202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "204",
                    "description": "Resource deleted.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R127A2B83iq204",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R127A2Bhybm400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R127A2B3lg5401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R127A2Bsitn403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R127A2Bfop7500",
                    "headers": []
                }
            ]
        },
        {
            "index": "128",
            "path": "/api/summary",
            "serviceName": "serv128Summary0",
            "method": "fetch",
            "summary": "Display Summary",
            "desc": "Get Ceph Summary Details",
            "responseType": "R128A0Buv3v200",
            "hasResponse": true,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Summary",
            "parameters": [],
            "tag": "Summary",
            "operationId": "serv128Summary0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "health_status",
                        "mgr_id",
                        "mgr_host",
                        "have_mon_connection",
                        "executing_tasks",
                        "finished_tasks",
                        "version",
                        "rbd_mirroring"
                    ],
                    "name": "R128A0Buv3v200",
                    "properties": [
                        {
                            "name": "health_status",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "mgr_id",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "mgr_host",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "have_mon_connection",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "executing_tasks",
                            "type": "array",
                            "typeItems": "string",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "finished_tasks",
                            "type": "array",
                            "typeItems": "object",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "version",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "rbd_mirroring",
                            "type": "object",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        }
                    ],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R128A0B7ut9400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R128A0Bw0zo401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R128A0Be0h6403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R128A0Bb99s500",
                    "headers": []
                }
            ]
        },
        {
            "index": "129",
            "path": "/api/task",
            "serviceName": "serv129Task0",
            "method": "fetch",
            "summary": "Display Tasks",
            "desc": "Task Management API",
            "responseType": "R129A0Buqxf200",
            "hasResponse": true,
            "parametersString": "String? name",
            "query": "?name=$name",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Task",
            "parameters": [
                {
                    "name": "name",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Task Name",
                    "allowEmptyValue": true
                }
            ],
            "tag": "Task",
            "operationId": "serv129Task0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "executing_tasks",
                        "finished_tasks"
                    ],
                    "name": "R129A0Buqxf200",
                    "properties": [
                        {
                            "name": "executing_tasks",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "ongoing executing tasks"
                        },
                        {
                            "name": "finished_tasks",
                            "type": "array",
                            "typeItems": "object",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        }
                    ],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R129A0Bsrhk400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R129A0Blxy8401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R129A0Bijbh403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R129A0B7m7f500",
                    "headers": []
                }
            ]
        },
        {
            "index": "130",
            "path": "/api/telemetry",
            "serviceName": "serv130Telemetry0",
            "method": "update",
            "summary": "",
            "desc": "Display Telemetry Report",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "Telemetry",
            "parameters": [],
            "tag": "Telemetry",
            "operationId": "serv130Telemetry0",
            "requestBody": {
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "enable",
                        "type": "boolean",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "license_name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R130A0B2hic200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R130A0B2wcn202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R130A0Bmfga400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R130A0B200a401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R130A0Bkybf403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R130A0Bl0ur500",
                    "headers": []
                }
            ]
        },
        {
            "index": "131",
            "path": "/api/telemetry/report",
            "serviceName": "serv131Telemetry0",
            "method": "fetch",
            "summary": "Get Detailed Telemetry report",
            "desc": "Display Telemetry Report",
            "responseType": "R131A0Bu7se200",
            "hasResponse": true,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "Telemetry",
            "parameters": [],
            "tag": "Telemetry",
            "operationId": "serv131Telemetry0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "report",
                        "device_report"
                    ],
                    "name": "R131A0Bu7se200",
                    "properties": [
                        {
                            "name": "report",
                            "type": "object",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        },
                        {
                            "name": "device_report",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": ""
                        }
                    ],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R131A0Bdd5g400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R131A0Bjeph401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R131A0Ban8b403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R131A0Bxff7500",
                    "headers": []
                }
            ]
        },
        {
            "index": "132",
            "path": "/api/user",
            "serviceName": "serv132User0",
            "method": "fetch",
            "summary": "Get List Of Users",
            "desc": "Display User Details",
            "responseType": "R132A0Bb56c200",
            "hasResponse": true,
            "parametersString": "",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "User",
            "parameters": [],
            "tag": "User",
            "operationId": "serv132User0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [
                        "username",
                        "roles",
                        "name",
                        "email",
                        "lastUpdate",
                        "enabled",
                        "pwdExpirationDate",
                        "pwdUpdateRequired"
                    ],
                    "name": "R132A0Bb56c200",
                    "properties": [
                        {
                            "name": "username",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Username of the user"
                        },
                        {
                            "name": "roles",
                            "type": "array",
                            "typeItems": "string",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "User Roles"
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "User Name"
                        },
                        {
                            "name": "email",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "User email address"
                        },
                        {
                            "name": "lastUpdate",
                            "type": "integer",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Details last updated"
                        },
                        {
                            "name": "enabled",
                            "type": "boolean",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Is the user enabled?"
                        },
                        {
                            "name": "pwdExpirationDate",
                            "type": "string",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Password Expiration date"
                        },
                        {
                            "name": "pwdUpdateRequired",
                            "type": "boolean",
                            "typeItems": "",
                            "enum": "",
                            "format": "",
                            "isEnum": false,
                            "example": "",
                            "required": false,
                            "description": "Is Password Update Required?"
                        }
                    ],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R132A0B3j8j400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R132A0Bzlpa401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R132A0B6ihf403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R132A0Bw8yn500",
                    "headers": []
                }
            ]
        },
        {
            "index": "132",
            "path": "/api/user",
            "serviceName": "serv132User1",
            "method": "post",
            "summary": "",
            "desc": "Display User Details",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "User",
            "parameters": [],
            "tag": "User",
            "operationId": "serv132User1",
            "requestBody": {
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "username",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "password",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "email",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "roles",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "enabled",
                        "type": "boolean",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "pwdExpirationDate",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "pwdUpdateRequired",
                        "type": "boolean",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R132A1Bxd3o201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R132A1B0vzh202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R132A1Bghmn400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R132A1Bbn33401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R132A1Bydpb403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R132A1B45lg500",
                    "headers": []
                }
            ]
        },
        {
            "index": "133",
            "path": "/api/user/validate_password",
            "serviceName": "serv133UserPasswordPolicy0",
            "method": "post",
            "summary": "",
            "desc": "Get User Password Policy Details",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "",
            "jsonParam": ", json.encode({})",
            "name": "UserPasswordPolicy",
            "parameters": [],
            "tag": "UserPasswordPolicy",
            "operationId": "serv133UserPasswordPolicy0",
            "requestBody": {
                "required": [
                    "password"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "password",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "username",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "old_password",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R133A0Bk9fa201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R133A0Befu7202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R133A0Bqlt9400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R133A0Bslv1401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R133A0Ba0jn403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R133A0Bm4ts500",
                    "headers": []
                }
            ]
        },
        {
            "index": "134",
            "path": "/api/user/${username}",
            "serviceName": "serv134User0",
            "method": "fetch",
            "summary": "",
            "desc": "Display User Details",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? username",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "User",
            "parameters": [
                {
                    "name": "username",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "User",
            "operationId": "serv134User0",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "200",
                    "description": "OK",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R134A0Bwz8m200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R134A0Bfkp6400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R134A0B82gf401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R134A0Bdod6403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R134A0B2eff500",
                    "headers": []
                }
            ]
        },
        {
            "index": "134",
            "path": "/api/user/${username}",
            "serviceName": "serv134User1",
            "method": "update",
            "summary": "",
            "desc": "Display User Details",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? username",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "username",
            "jsonParam": ", json.encode({\"username\": \"${username}\"})",
            "name": "User",
            "parameters": [
                {
                    "name": "username",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "User",
            "operationId": "serv134User1",
            "requestBody": {
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "password",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "email",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "roles",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "enabled",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "pwdExpirationDate",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    },
                    {
                        "name": "pwdUpdateRequired",
                        "type": "boolean",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": false,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "200",
                    "description": "Resource updated.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R134A1Bahed200",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R134A1B2jmz202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R134A1Betfr400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R134A1Bdlnh401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R134A1Bvd6k403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R134A1B5x05500",
                    "headers": []
                }
            ]
        },
        {
            "index": "134",
            "path": "/api/user/${username}",
            "serviceName": "serv134User2",
            "method": "delete",
            "summary": "",
            "desc": "Display User Details",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? username",
            "query": "",
            "requestPayload": "",
            "requestPayloadStatement": "",
            "onlyParam": "",
            "jsonParam": "",
            "name": "User",
            "parameters": [
                {
                    "name": "username",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "User",
            "operationId": "serv134User2",
            "requestBody": {
                "required": [],
                "component": "",
                "description": "",
                "contentType": [],
                "properties": []
            },
            "responses": [
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R134A2B5tt7202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "204",
                    "description": "Resource deleted.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R134A2Byiih204",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R134A2B4pun400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R134A2Bmknq401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R134A2Bqh9h403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R134A2B0u4p500",
                    "headers": []
                }
            ]
        },
        {
            "index": "135",
            "path": "/api/user/${username}/change_password",
            "serviceName": "serv135UserChangePassword0",
            "method": "post",
            "summary": "",
            "desc": "Change User Password",
            "responseType": "void",
            "hasResponse": false,
            "parametersString": "String? username",
            "query": "",
            "requestPayload": ", void",
            "requestPayloadStatement": "const void = void(",
            "onlyParam": "username",
            "jsonParam": ", json.encode({\"username\": \"${username}\"})",
            "name": "UserChangePassword",
            "parameters": [
                {
                    "name": "username",
                    "in": "path",
                    "schema": {
                        "type": "string"
                    },
                    "required": true
                }
            ],
            "tag": "UserChangePassword",
            "operationId": "serv135UserChangePassword0",
            "requestBody": {
                "required": [
                    "old_password",
                    "new_password"
                ],
                "component": "",
                "contentType": [
                    "application/json"
                ],
                "properties": [
                    {
                        "name": "old_password",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    },
                    {
                        "name": "new_password",
                        "type": "string",
                        "typeItems": "",
                        "enum": "",
                        "format": "",
                        "isEnum": false,
                        "example": "",
                        "required": true,
                        "description": ""
                    }
                ]
            },
            "responses": [
                {
                    "code": "201",
                    "description": "Resource created.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R135A0Beptj201",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "202",
                    "description": "Operation is still executing. Please check the task queue.",
                    "contentType": "application/vnd.ceph.api.v1.0+json",
                    "component": "",
                    "required": [],
                    "name": "R135A0B70fv202",
                    "properties": [],
                    "object": {},
                    "headers": []
                },
                {
                    "code": "400",
                    "description": "Operation exception. Please check the response body for details.",
                    "name": "R135A0Btjwv400",
                    "headers": []
                },
                {
                    "code": "401",
                    "description": "Unauthenticated access. Please login first.",
                    "name": "R135A0Bbe5d401",
                    "headers": []
                },
                {
                    "code": "403",
                    "description": "Unauthorized access. Please check your permissions.",
                    "name": "R135A0Bqq0r403",
                    "headers": []
                },
                {
                    "code": "500",
                    "description": "Unexpected error. Please check the response body for the stack trace.",
                    "name": "R135A0B931p500",
                    "headers": []
                }
            ]
        }
    ],
    "entities": [
        {
            "appsName": "myname",
            "pkType": "String",
            "relationships": [],
            "entityName": "R1A0Bwv93201",
            "entityClass": "R1a0bwv93201",
            "entityInstance": "r1A0Bwv93201",
            "entityFolderName": "r1A0Bwv93201",
            "entityFileName": "r1A0Bwv93201",
            "enableTranslation": false,
            "fields": [
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Username",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "username",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Username",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "object",
                        "example": "",
                        "description": "List of permissions acquired",
                        "type": "Object",
                        "typeDesc": ""
                    },
                    "fieldName": "permissions",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "List of permissions acquired",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "boolean",
                        "example": "",
                        "description": "Uses single sign on?",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "sso",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Uses single sign on?",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "boolean",
                        "example": "",
                        "description": "Is password update required?",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "pwdUpdateRequired",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Is password update required?",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                }
            ]
        },
        {
            "appsName": "myname",
            "pkType": "String",
            "relationships": [],
            "entityName": "R18A0Ber9o200",
            "entityClass": "R18a0ber9o200",
            "entityInstance": "r18A0Ber9O200",
            "entityFolderName": "r18A0Ber9O200",
            "entityFileName": "r18A0Ber9O200",
            "enableTranslation": false,
            "fields": [
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Mirror Mode",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "mirrorMode",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Mirror Mode",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                }
            ]
        },
        {
            "appsName": "myname",
            "pkType": "String",
            "relationships": [],
            "entityName": "R23A0Bzaow200",
            "entityClass": "R23a0bzaow200",
            "entityInstance": "r23A0Bzaow200",
            "entityFolderName": "r23A0Bzaow200",
            "entityFileName": "r23A0Bzaow200",
            "enableTranslation": false,
            "fields": [
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Site Name",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "siteName",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Site Name",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                }
            ]
        },
        {
            "appsName": "myname",
            "pkType": "String",
            "relationships": [],
            "entityName": "R24A0Bj2c8200",
            "entityClass": "R24a0bj2c8200",
            "entityInstance": "r24A0Bj2C8200",
            "entityFolderName": "r24A0Bj2C8200",
            "entityFileName": "r24A0Bj2C8200",
            "enableTranslation": false,
            "fields": [
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "site name",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "siteName",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "site name",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "integer",
                        "example": "",
                        "description": "",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "status",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "object",
                        "example": "",
                        "description": "",
                        "type": "Object",
                        "typeDesc": ""
                    },
                    "fieldName": "contentData",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                }
            ]
        },
        {
            "appsName": "myname",
            "pkType": "String",
            "relationships": [],
            "entityName": "R34A0B19fc200",
            "entityClass": "R34a0b19fc200",
            "entityInstance": "r34A0B19Fc200",
            "entityFolderName": "r34A0B19Fc200",
            "entityFileName": "r34A0B19Fc200",
            "enableTranslation": false,
            "fields": [
                {
                    "fieldType": {
                        "origin": "integer",
                        "example": "",
                        "description": "",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "maxBytes",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "integer",
                        "example": "",
                        "description": "",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "maxFiles",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                }
            ]
        },
        {
            "appsName": "myname",
            "pkType": "String",
            "relationships": [],
            "entityName": "R41A0Byp0r200",
            "entityClass": "R41a0byp0r200",
            "entityInstance": "r41A0Byp0R200",
            "entityFolderName": "r41A0Byp0R200",
            "entityFileName": "r41A0Byp0R200",
            "enableTranslation": false,
            "fields": [
                {
                    "fieldType": {
                        "origin": "integer",
                        "example": "",
                        "description": "Rule ID",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "ruleId",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Rule ID",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Rule Name",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "ruleName",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Rule Name",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "integer",
                        "example": "",
                        "description": "RuleSet related to the rule",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "ruleset",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "RuleSet related to the rule",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "integer",
                        "example": "",
                        "description": "Type of Rule",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "type",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Type of Rule",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "integer",
                        "example": "",
                        "description": "Minimum size of Rule",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "minSize",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Minimum size of Rule",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "integer",
                        "example": "",
                        "description": "Maximum size of Rule",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "maxSize",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Maximum size of Rule",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "Steps included in the rule",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "steps",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Steps included in the rule",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                }
            ]
        },
        {
            "appsName": "myname",
            "pkType": "String",
            "relationships": [],
            "entityName": "R46A0Bf5gc200",
            "entityClass": "R46a0bf5gc200",
            "entityInstance": "r46A0Bf5Gc200",
            "entityFolderName": "r46A0Bf5Gc200",
            "entityFileName": "r46A0Bf5Gc200",
            "enableTranslation": false,
            "fields": [
                {
                    "fieldType": {
                        "origin": "boolean",
                        "example": "",
                        "description": "",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "rbd",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "boolean",
                        "example": "",
                        "description": "",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "mirroring",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "boolean",
                        "example": "",
                        "description": "",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "iscsi",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "boolean",
                        "example": "",
                        "description": "",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "cephfs",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "boolean",
                        "example": "",
                        "description": "",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "rgw",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "boolean",
                        "example": "",
                        "description": "",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "nfs",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                }
            ]
        },
        {
            "appsName": "myname",
            "pkType": "String",
            "relationships": [],
            "entityName": "R50A0Brro2200",
            "entityClass": "R50a0brro2200",
            "entityInstance": "r50A0Brro2200",
            "entityFolderName": "r50A0Brro2200",
            "entityFileName": "r50A0Brro2200",
            "enableTranslation": false,
            "fields": [
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "grafana instance",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "instance",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "grafana instance",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                }
            ]
        },
        {
            "appsName": "myname",
            "pkType": "String",
            "relationships": [],
            "entityName": "R53A0Bjvtl200",
            "entityClass": "R53a0bjvtl200",
            "entityInstance": "r53A0Bjvtl200",
            "entityFolderName": "r53A0Bjvtl200",
            "entityFileName": "r53A0Bjvtl200",
            "enableTranslation": false,
            "fields": [
                {
                    "fieldType": {
                        "origin": "object",
                        "example": "",
                        "description": "",
                        "type": "Object",
                        "typeDesc": ""
                    },
                    "fieldName": "clientPerf",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "object",
                        "example": "",
                        "description": "",
                        "type": "Object",
                        "typeDesc": ""
                    },
                    "fieldName": "df",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "object",
                        "example": "",
                        "description": "",
                        "type": "Object",
                        "typeDesc": ""
                    },
                    "fieldName": "fsMap",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "object",
                        "example": "",
                        "description": "",
                        "type": "Object",
                        "typeDesc": ""
                    },
                    "fieldName": "health",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "integer",
                        "example": "",
                        "description": "",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "hosts",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "object",
                        "example": "",
                        "description": "",
                        "type": "Object",
                        "typeDesc": ""
                    },
                    "fieldName": "iscsiDaemons",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "object",
                        "example": "",
                        "description": "",
                        "type": "Object",
                        "typeDesc": ""
                    },
                    "fieldName": "mgrMap",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "object",
                        "example": "",
                        "description": "",
                        "type": "Object",
                        "typeDesc": ""
                    },
                    "fieldName": "monStatus",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "object",
                        "example": "",
                        "description": "",
                        "type": "Object",
                        "typeDesc": ""
                    },
                    "fieldName": "osdMap",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "object",
                        "example": "",
                        "description": "",
                        "type": "Object",
                        "typeDesc": ""
                    },
                    "fieldName": "pgInfo",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "pools",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "integer",
                        "example": "",
                        "description": "",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "rgw",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "scrubStatus",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                }
            ]
        },
        {
            "appsName": "myname",
            "pkType": "String",
            "relationships": [],
            "entityName": "R54A0B7za2200",
            "entityClass": "R54a0b7za2200",
            "entityInstance": "r54A0B7Za2200",
            "entityFolderName": "r54A0B7Za2200",
            "entityFileName": "r54A0B7Za2200",
            "enableTranslation": false,
            "fields": [
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Hostname",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "hostname",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Hostname",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "Services related to the host",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "services",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Services related to the host",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Ceph version",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "cephVersion",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Ceph version",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Host address",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "addr",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Host address",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "Labels related to the host",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "labels",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Labels related to the host",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "serviceType",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "object",
                        "example": "",
                        "description": "Host Sources",
                        "type": "Object",
                        "typeDesc": ""
                    },
                    "fieldName": "sources",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Host Sources",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "status",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                }
            ]
        },
        {
            "appsName": "myname",
            "pkType": "String",
            "relationships": [],
            "entityName": "R59A0Bzyea200",
            "entityClass": "R59a0bzyea200",
            "entityInstance": "r59A0Bzyea200",
            "entityFolderName": "r59A0Bzyea200",
            "entityFileName": "r59A0Bzyea200",
            "enableTranslation": false,
            "fields": [
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Hostname",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "name",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Hostname",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Host address",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "addr",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Host address",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "Host devices",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "devices",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Host devices",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "Host labels",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "labels",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Host labels",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                }
            ]
        },
        {
            "appsName": "myname",
            "pkType": "String",
            "relationships": [],
            "entityName": "R64A0Bdvzs200",
            "entityClass": "R64a0bdvzs200",
            "entityInstance": "r64A0Bdvzs200",
            "entityFolderName": "r64A0Bdvzs200",
            "entityFileName": "r64A0Bdvzs200",
            "enableTranslation": false,
            "fields": [
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "clog",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "Audit log",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "auditLog",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Audit log",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                }
            ]
        },
        {
            "appsName": "myname",
            "pkType": "String",
            "relationships": [],
            "entityName": "R70A0Bm6r9200",
            "entityClass": "R70a0bm6r9200",
            "entityInstance": "r70A0Bm6R9200",
            "entityFolderName": "r70A0Bm6R9200",
            "entityFileName": "r70A0Bm6R9200",
            "enableTranslation": false,
            "fields": [
                {
                    "fieldType": {
                        "origin": "object",
                        "example": "",
                        "description": "",
                        "type": "Object",
                        "typeDesc": ""
                    },
                    "fieldName": "monStatus",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "inQuorum",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "outQuorum",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                }
            ]
        },
        {
            "appsName": "myname",
            "pkType": "String",
            "relationships": [],
            "entityName": "R72A1B091z201",
            "entityClass": "R72a1b091z201",
            "entityInstance": "r72A1B091Z201",
            "entityFolderName": "r72A1B091Z201",
            "entityFileName": "r72A1B091Z201",
            "enableTranslation": false,
            "fields": [
                {
                    "fieldType": {
                        "origin": "integer",
                        "example": "",
                        "description": "Export ID",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "exportId",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Export ID",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Export path",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "path",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Export path",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Cluster identifier",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "clusterId",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Cluster identifier",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Pseudo FS path",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "pseudo",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Pseudo FS path",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Export access type",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "accessType",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Export access type",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Export squash policy",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "squash",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Export squash policy",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Security label",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "securityLabel",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Security label",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "List of protocol types",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "protocols",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "List of protocol types",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "List of transport types",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "transports",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "List of transport types",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "object",
                        "example": "",
                        "description": "FSAL configuration",
                        "type": "Object",
                        "typeDesc": ""
                    },
                    "fieldName": "fsal",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "FSAL configuration",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "List of client configurations",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "clients",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "List of client configurations",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                }
            ]
        },
        {
            "appsName": "myname",
            "pkType": "String",
            "relationships": [],
            "entityName": "R73A0Bso8m200",
            "entityClass": "R73a0bso8m200",
            "entityInstance": "r73A0Bso8M200",
            "entityFolderName": "r73A0Bso8M200",
            "entityFileName": "r73A0Bso8M200",
            "enableTranslation": false,
            "fields": [
                {
                    "fieldType": {
                        "origin": "integer",
                        "example": "",
                        "description": "Export ID",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "exportId",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Export ID",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Export path",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "path",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Export path",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Cluster identifier",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "clusterId",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Cluster identifier",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Pseudo FS path",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "pseudo",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Pseudo FS path",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Export access type",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "accessType",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Export access type",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Export squash policy",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "squash",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Export squash policy",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Security label",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "securityLabel",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Security label",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "List of protocol types",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "protocols",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "List of protocol types",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "List of transport types",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "transports",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "List of transport types",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "object",
                        "example": "",
                        "description": "FSAL configuration",
                        "type": "Object",
                        "typeDesc": ""
                    },
                    "fieldName": "fsal",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "FSAL configuration",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "List of client configurations",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "clients",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "List of client configurations",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                }
            ]
        },
        {
            "appsName": "myname",
            "pkType": "String",
            "relationships": [],
            "entityName": "R73A1Beobh200",
            "entityClass": "R73a1beobh200",
            "entityInstance": "r73A1Beobh200",
            "entityFolderName": "r73A1Beobh200",
            "entityFileName": "r73A1Beobh200",
            "enableTranslation": false,
            "fields": [
                {
                    "fieldType": {
                        "origin": "integer",
                        "example": "",
                        "description": "Export ID",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "exportId",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Export ID",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Export path",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "path",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Export path",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Cluster identifier",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "clusterId",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Cluster identifier",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Pseudo FS path",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "pseudo",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Pseudo FS path",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Export access type",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "accessType",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Export access type",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Export squash policy",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "squash",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Export squash policy",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Security label",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "securityLabel",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Security label",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "List of protocol types",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "protocols",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "List of protocol types",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "List of transport types",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "transports",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "List of transport types",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "object",
                        "example": "",
                        "description": "FSAL configuration",
                        "type": "Object",
                        "typeDesc": ""
                    },
                    "fieldName": "fsal",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "FSAL configuration",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "List of client configurations",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "clients",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "List of client configurations",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                }
            ]
        },
        {
            "appsName": "myname",
            "pkType": "String",
            "relationships": [],
            "entityName": "R75A0Bzv5v200",
            "entityClass": "R75a0bzv5v200",
            "entityInstance": "r75A0Bzv5V200",
            "entityFolderName": "r75A0Bzv5V200",
            "entityFileName": "r75A0Bzv5V200",
            "enableTranslation": false,
            "fields": [
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "listOfFlags",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                }
            ]
        },
        {
            "appsName": "myname",
            "pkType": "String",
            "relationships": [],
            "entityName": "R75A1Bhpnh200",
            "entityClass": "R75a1bhpnh200",
            "entityInstance": "r75A1Bhpnh200",
            "entityFolderName": "r75A1Bhpnh200",
            "entityFileName": "r75A1Bhpnh200",
            "enableTranslation": false,
            "fields": [
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "listOfFlags",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                }
            ]
        },
        {
            "appsName": "myname",
            "pkType": "String",
            "relationships": [],
            "entityName": "R76A0B68yu200",
            "entityClass": "R76a0b68yu200",
            "entityInstance": "r76A0B68Yu200",
            "entityFolderName": "r76A0B68Yu200",
            "entityFileName": "r76A0B68Yu200",
            "enableTranslation": false,
            "fields": [
                {
                    "fieldType": {
                        "origin": "integer",
                        "example": "",
                        "description": "OSD ID",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "osd",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "OSD ID",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "List of active flags",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "flags",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "List of active flags",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                }
            ]
        },
        {
            "appsName": "myname",
            "pkType": "String",
            "relationships": [],
            "entityName": "R76A1Bc0aa200",
            "entityClass": "R76a1bc0aa200",
            "entityInstance": "r76A1Bc0Aa200",
            "entityFolderName": "r76A1Bc0Aa200",
            "entityFileName": "r76A1Bc0Aa200",
            "enableTranslation": false,
            "fields": [
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "List of added flags",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "added",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "List of added flags",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "List of removed flags",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "removed",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "List of removed flags",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "List of updated OSDs",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "ids",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "List of updated OSDs",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                }
            ]
        },
        {
            "appsName": "myname",
            "pkType": "String",
            "relationships": [],
            "entityName": "R78A0Bir67200",
            "entityClass": "R78a0bir67200",
            "entityInstance": "r78A0Bir67200",
            "entityFolderName": "r78A0Bir67200",
            "entityFileName": "r78A0Bir67200",
            "enableTranslation": false,
            "fields": [
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "Is OSD safe to destroy?",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "safeToDestroy",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Is OSD safe to destroy?",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "active",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "missingStats",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "Stored Pool groups in Osd",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "storedPgs",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Stored Pool groups in Osd",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "boolean",
                        "example": "",
                        "description": "Is OSD safe to destroy?",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "isSafeToDestroy",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Is OSD safe to destroy?",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                }
            ]
        },
        {
            "appsName": "myname",
            "pkType": "String",
            "relationships": [],
            "entityName": "R89A0B0qbo200",
            "entityClass": "R89a0b0qbo200",
            "entityInstance": "r89A0B0Qbo200",
            "entityFolderName": "r89A0B0Qbo200",
            "entityFileName": "r89A0B0Qbo200",
            "enableTranslation": false,
            "fields": [
                {
                    "fieldType": {
                        "origin": "object",
                        "example": "",
                        "description": "Service ID",
                        "type": "Object",
                        "typeDesc": ""
                    },
                    "fieldName": "monA",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Service ID",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                }
            ]
        },
        {
            "appsName": "myname",
            "pkType": "String",
            "relationships": [],
            "entityName": "R111A0Bzugi200",
            "entityClass": "R111a0bzugi200",
            "entityInstance": "r111A0Bzugi200",
            "entityFolderName": "r111A0Bzugi200",
            "entityFileName": "r111A0Bzugi200",
            "enableTranslation": false,
            "fields": [
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "list of rgw users",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "listOfUsers",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "list of rgw users",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                }
            ]
        },
        {
            "appsName": "myname",
            "pkType": "String",
            "relationships": [],
            "entityName": "R128A0Buv3v200",
            "entityClass": "R128a0buv3v200",
            "entityInstance": "r128A0Buv3V200",
            "entityFolderName": "r128A0Buv3V200",
            "entityFileName": "r128A0Buv3V200",
            "enableTranslation": false,
            "fields": [
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "healthStatus",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "mgrId",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "mgrHost",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "haveMonConnection",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "executingTasks",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "finishedTasks",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "version",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "object",
                        "example": "",
                        "description": "",
                        "type": "Object",
                        "typeDesc": ""
                    },
                    "fieldName": "rbdMirroring",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                }
            ]
        },
        {
            "appsName": "myname",
            "pkType": "String",
            "relationships": [],
            "entityName": "R129A0Buqxf200",
            "entityClass": "R129a0buqxf200",
            "entityInstance": "r129A0Buqxf200",
            "entityFolderName": "r129A0Buqxf200",
            "entityFileName": "r129A0Buqxf200",
            "enableTranslation": false,
            "fields": [
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "ongoing executing tasks",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "executingTasks",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "ongoing executing tasks",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "finishedTasks",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                }
            ]
        },
        {
            "appsName": "myname",
            "pkType": "String",
            "relationships": [],
            "entityName": "R131A0Bu7se200",
            "entityClass": "R131a0bu7se200",
            "entityInstance": "r131A0Bu7Se200",
            "entityFolderName": "r131A0Bu7Se200",
            "entityFileName": "r131A0Bu7Se200",
            "enableTranslation": false,
            "fields": [
                {
                    "fieldType": {
                        "origin": "object",
                        "example": "",
                        "description": "",
                        "type": "Object",
                        "typeDesc": ""
                    },
                    "fieldName": "report",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "deviceReport",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                }
            ]
        },
        {
            "appsName": "myname",
            "pkType": "String",
            "relationships": [],
            "entityName": "R132A0Bb56c200",
            "entityClass": "R132a0bb56c200",
            "entityInstance": "r132A0Bb56C200",
            "entityFolderName": "r132A0Bb56C200",
            "entityFileName": "r132A0Bb56C200",
            "enableTranslation": false,
            "fields": [
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Username of the user",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "username",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Username of the user",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "array",
                        "example": "",
                        "description": "User Roles",
                        "type": "List",
                        "typeDesc": ""
                    },
                    "fieldName": "roles",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "User Roles",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "User Name",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "name",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "User Name",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "User email address",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "email",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "User email address",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "integer",
                        "example": "",
                        "description": "Details last updated",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "lastUpdate",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Details last updated",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "boolean",
                        "example": "",
                        "description": "Is the user enabled?",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "enabled",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Is the user enabled?",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "string",
                        "example": "",
                        "description": "Password Expiration date",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "pwdExpirationDate",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Password Expiration date",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                },
                {
                    "fieldType": {
                        "origin": "boolean",
                        "example": "",
                        "description": "Is Password Update Required?",
                        "type": "String",
                        "typeDesc": ""
                    },
                    "fieldName": "pwdUpdateRequired",
                    "fieldIsEnum": false,
                    "fieldValues": "",
                    "fieldDescription": "Is Password Update Required?",
                    "fieldsContainOneToMany": false,
                    "fieldsContainOwnerManyToMany": false,
                    "fieldsContainOwnerOneToOne": false,
                    "fieldsContainNoOwnerOneToOne": false,
                    "fieldsContainManyToOne": false
                }
            ]
        }
    ],
    "properties": []
}